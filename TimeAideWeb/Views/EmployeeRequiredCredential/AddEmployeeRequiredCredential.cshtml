@model TimeAide.Web.ViewModel.EmployeeRequiredCredentialViewModel

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.SelectedUserId)
    <div class="alert alert-primary" style="text-align:center;background-color: #00c5fb;border: 1px solid #00c5fb;">
        <h4 style="display: inline;">@ViewBag.Label</h4>
        <button class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">×</span>
        </button>
    </div>
    <br />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal" style="padding:10px">
        <h4>Employee Required Credential</h4>
        <hr />
        <div class="form-group row">
            <div class="col-md-4">
                @Html.ListBoxFor(model => model.CredentialId, Model.Credentials, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <div class="subject-info-arrows text-center">
                    <input type="button" id="btnAllRight" value=">>" class="btn btn-default" onclick="MoveAllCredentialRight()" style="width: 70px !important;" /><br />
                    <input type="button" id="btnRight" value=">" class="btn btn-default" onclick="MoveCredentialRight()" style="width: 70px !important;" /><br />
                    <input type="button" id="btnLeft" value="<" class="btn btn-default" onclick="MoveCredentialLeft()" style="width: 70px !important;" /><br />
                    <input type="button" id="btnAllLeft" value="<<" class="btn btn-default" onclick="MoveAllCredentialLeft()" style="width: 70px !important;" />
                </div>
            </div>
            <div class="col-md-4">
                @Html.ListBoxFor(model => model.RequiredCredentialId, Model.RequiredCredential, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" onclick="SelectAllCredentials()" />
                </div>
            </div>
    </div>
}

<div class="submit-section">
    <input type="hidden" id="popupTargetDdl" />
    <button type="button" onclick="fnAddEmployeeRequiredCredential_('@ViewBag.FormName');" class="btn btn-primary submit-btn">Save</button>
    <button type="button" class="btn btn-primary submit-btn" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    function MoveAllCredentialRight() {
        debugger
        var selectedOpts = $('#CredentialId option');
        if (selectedOpts.length == 0) {
            alert("Nothing to move.");
        }
        $('#RequiredCredentialId').append($(selectedOpts).clone());
        $(selectedOpts).remove();
    }
    function MoveCredentialRight() {
        debugger
        var selectedOpts = $('#CredentialId option:selected');
        if (selectedOpts.length == 0) {
            alert("Nothing to move.");
        }
        $('#RequiredCredentialId').append($(selectedOpts).clone());
        $(selectedOpts).remove();
    }
    function MoveCredentialLeft() {
        debugger
        var selectedOpts = $('#RequiredCredentialId option:selected');
        if (selectedOpts.length == 0) {
            alert("Nothing to move.");
        }
        $('#CredentialId').append($(selectedOpts).clone());
        $(selectedOpts).remove();
    }
    function MoveAllCredentialLeft() {
        debugger
        var selectedOpts = $('#RequiredCredentialId option');
        if (selectedOpts.length == 0) {
            alert("Nothing to move.");
        }
        $('#CredentialId').append($(selectedOpts).clone());
        $(selectedOpts).remove();
    }
    function SelectAllCredentials() {
        $('#RequiredCredentialId option').prop('selected', true);
    }

    function fnAddEmployeeRequiredCredential_(id) {
        debugger;
        $('#RequiredCredentialId option').prop('selected', true);
        var options = { "backdrop": "static", keyboard: true };
        var model = {
            SelectedUserId: $('#SelectedUserId').val(),
            RequiredCredential: $('#RequiredCredential').val(),
            Credentials: $('#Credentials').val(),
            RequiredCredentialId: $('#RequiredCredentialId').val(),
            CredentialId: $('#CredentialId').val()
        }
        $.ajax({
            type: 'post',
            url: '/EmployeeRequiredCredential/AddEmployeeRequiredCredential',
            data: JSON.stringify(model),
            contentType: 'application/json; charset=utf-8',
            dataType: "json",
            success: function (html) {
                debugger
                fnRefreshEmployeeRequiredCredential($('#SelectedUserId').val());
                //$('#divEmployeeCredential').html(html);
                $('#myModal').modal('hide');
            },
            error: function (xhr, ajaxOptions, thrownError) {
                debugger
                var responseText = jQuery.parseJSON(xhr.responseText)
                var errorObject = jQuery.parseJSON(responseText.errors)
                $.each(errorObject, function (idx, errorMessage) {
                    $('span[data-valmsg-for="' + errorMessage.Key + '"]').text(errorMessage.Message);
                });
            }
        });
    }

    function fnRefreshEmployeeRequiredCredential(id) {
        var options = { "backdrop": "static", keyboard: true };
        $.ajax({
            type: "GET",
            url: '/EmployeeCredential/IndexEmployeeCredential',
            contentType: "application/json; charset=utf-8",
            data: { "Id": id },
            datatype: "html",
            success: function (html) {
                //debugger;
                $('#divEmployeeCredential').html(html);

            },
            error: function () {
                alert("Dynamic content load failed.");
            }
        });
    }
</script>
<style type="text/css">
    .subject-info-box-1,
    .subject-info-box-2 {
        float: left;
        width: 45%;
    }

    select[multiple] {
        height: 200px;
        padding: 0;
    }

    option {
        padding: 4px 10px 4px 10px;
    }

        option:hover {
            background: #EEEEEE;
        }


    .subject-info-arrows {
        float: left;
        width: 10%;
    }
</style>
