@using TimeAide.Web.ViewModel;
@using TimeAide.Web.Models;
<div class="card tab-box">
    <div class="row user-tabs">
        <div class="col-lg-12 col-md-12 col-sm-12 line-tabs">
            <ul class="nav nav-tabs nav-tabs-bottom">
                <li class="nav-item" id="sentUsersTab"><a href="#sentUsers" data-toggle="tab" class="nav-link active">Sent</a></li>
                <li class="nav-item" id="notSentTab"><a href="#notSent" data-toggle="tab" class="nav-link">Not Sent</a></li>
            </ul>
        </div>
    </div>
</div>
<div class="tab-content pt-0">
    <div id="sentUsers" class="pro-overview tab-pane fade show active">
        <div class="row">
            <div class="col-md-12 d-flex">
                <div class="card profile-box flex-fill">
                    <div class="card-body pt-1">
                        <div class="row">
                            <div class="col-md-6">
                                <h3 class="card-title pull-left">
                                    Sent
                                </h3>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="table-responsive">
                                <table class="table table-striped custom-table table-nowrap mb-0" id="tblErrorUser">
                                    <!--<table class="datatable table table-striped table-nowrap mb-0">-->
                                    <thead>
                                        <tr>
                                            <th>Emp Id</th>
                                            <th>Name</th>
                                            <th>Department</th>
                                            <th>EmployeeType</th>
                                            <th>Position</th>
                                            <td>Login Email</td>
                                            <th>Role</th>
                                            <th>
                                                Employee Groups
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody id="tbodyTblErrorUser">
                                        @if (Model != null)
                                        {
                                            foreach (var each in (ViewBag.Sent as List<TimeAide.Models.ViewModel.UserInformationViewModel>))
                                            {
                                                @AddRow(each)
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="notSent" class="pro-overview tab-pane">
        <div class="row">
            <div class="col-md-12 d-flex">
                <div class="card profile-box flex-fill">
                    <div class="card-body pt-1">
                        <div class="row">
                            <div class="col-md-6">
                                <h3 class="card-title pull-left">
                                    Not Sent
                                </h3>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="table-responsive">
                                <table class="table table-striped custom-table table-nowrap mb-0" id="tblErrorUser1" style="width:100%">
                                    <!--<table class="datatable table table-striped table-nowrap mb-0">-->
                                    <thead>
                                        <tr>
                                            <th>Emp Id</th>
                                            <th>Name</th>
                                            <th>Department</th>
                                            <th>EmployeeType</th>
                                            <th>Position</th>
                                            <td>Login Email</td>
                                            <th>Role</th>
                                            <th>
                                                Employee Groups
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody id="tbodyTblErrorUser">
                                        @if (Model != null)
                                        {
                                            
                                            foreach (var each in (ViewBag.NotSent as List<TimeAide.Models.ViewModel.UserInformationViewModel>))
                                            {
                                                @AddRow(each)
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
</div>
<div class="row" id="divError">
    @*<div class="danger">Below Users have issues while sending registration email</div>*@
    <div class="table-responsive">
        
    </div>
</div>
<div class="submit-section">
    @Html.ActionLink("Back Bulk Registration", "IndexBulkUserRegistration", "UserInformation")
</div>
@helper AddRow(TimeAide.Models.ViewModel.UserInformationViewModel each)
{
    var activeEmployment = TimeAide.Services.EmploymentService.GetActiveEmployment(each.Id);
    EmploymentHistory activeEmploymentHistory = null;
    if (activeEmployment != null)
    {
        activeEmploymentHistory = TimeAide.Services.EmploymentHistoryService.GetActiveEmploymentHistory(each.Id, activeEmployment.Id);
    }
    <tr>
        <td>
            @Html.DisplayFor(modelItem => each.EmployeeId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => each.ShortFullName)
        </td>
        <td>
            @if (activeEmploymentHistory != null && activeEmploymentHistory.Department != null)
            {
                <span>@activeEmploymentHistory.Department.DepartmentName</span>
            }
        </td>
        <td>
            @if (activeEmploymentHistory != null && activeEmploymentHistory.EmployeeType != null)
            {
                <span>@activeEmploymentHistory.EmployeeType.EmployeeTypeName</span>
            }
        </td>
        <td>
            @if (activeEmploymentHistory != null && activeEmploymentHistory.Position != null)
            {
                <span>@activeEmploymentHistory.Position.PositionName</span>
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => each.LoginEmail)
        </td>
        <td>@Html.DisplayFor(modelItem => each.UserRole)</td>
        <td>@Html.DisplayFor(modelItem => each.EmployeeGroups)</td>
    </tr>
}
<script>
    $(document).ready(function () {
        var indexColumns = $("#tblErrorUser > thead > tr:first > th").length;
        var exportColumns = "[";
        for (let i = 0; i < indexColumns - 1; i++) {
            exportColumns += i + ","
        }
        if (indexColumns > 0) {
            exportColumns = exportColumns.slice(0, -1)
        }
        exportColumns += "]";
        $('#tblErrorUser').DataTable({
            searching: false,
            ordering: false,
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'copyHtml5',
                    text: '<i class="fa fa-files-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'Copy',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    },
                    title: 'Sent'
                },
                {
                    extend: 'excelHtml5',
                    text: '<i class="fa fa-file-excel-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'Excel',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    },
                    title: 'Sent'
                },
                {
                    extend: 'csvHtml5',
                    text: '<i class="fa fa-file-text-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'CSV',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    },
                    title: 'Sent'
                },
                {
                    extend: 'pdfHtml5',
                    text: '<i class="fa fa-file-pdf-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'PDF',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    },
                    title: 'Sent'
                },
                {
                    extend: 'pageLength',
                    className: 'btn-primary',
                },
            ],
        });
        $('#tblErrorUser1').DataTable({
            searching: false,
            ordering: false,
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'copyHtml5',
                    text: '<i class="fa fa-files-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'Copy',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    },
                    title: 'Not Sent'
                },
                {
                    extend: 'excelHtml5',
                    text: '<i class="fa fa-file-excel-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'Excel',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    },
                    title: 'Not Sent'
                },
                {
                    extend: 'csvHtml5',
                    text: '<i class="fa fa-file-text-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'CSV',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    },
                    title: 'Not Sent'
                },
                {
                    extend: 'pdfHtml5',
                    text: '<i class="fa fa-file-pdf-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'PDF',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    },
                    title: 'Not Sent'
                },
                {
                    extend: 'pageLength',
                    className: 'btn-primary',
                },
            ],
        });
    });
    function BackToBulkEmails() {
        $("#divMainArea").show();
        $("#divReportArea").hide();
    }
</script>

