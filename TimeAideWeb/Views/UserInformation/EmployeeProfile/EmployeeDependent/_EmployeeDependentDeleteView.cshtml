@model TimeAide.Web.Models.EmployeeDependent

<div class="modal-header alert alert-primary" style="text-align:center;background-color: #00c5fb;border: 1px solid #00c5fb;padding:10px">
    <h4 class="modal-title">Employee Dependent - Delete</h4>
    <button class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">×</span>
    </button>
</div>

<div class="modal-body">
    <div class="card-body">
        @Html.HiddenFor(model => model.Id, new { id = "EmployeeDependentId" })
        <div class="form-group row" style="margin-left: 0px !important; margin-right: 0px !important;">
            <div class="panel panel-default" style="width:50%;">
                <div class="panel-heading" style="padding-left:10px">Old Employee Dependent</div>
                <div class="panel-body">
                    <div class="form-group row">
                        <label class="col-md-2 col-form-label" style="margin-left:0px">First Name:</label>
                        <div class="col-md-2 text-muted mt-2">
                            @Html.DisplayFor(m => m.FirstName)
                            @Html.HiddenFor(m => m.FirstName)
                        </div>
                        <label class="col-md-2 col-form-label">Last Name:</label>
                        <div class="col-md-2 text-muted mt-2">
                            @Html.DisplayFor(m => m.LastName)

                        </div>
                        <label class="col-md-2 col-form-label">SSN:</label>
                        <div class="col-md-2 text-muted  mt-2">
                            @TimeAide.Services.UserInformationService.MaskSsn(Model.SSN)
                        </div>

                    </div>
                    <div class="form-group row">
                        <label class="col-md-2 col-form-label" style="margin-left:0px">Birth Date:</label>
                        <div class="col-md-2 text-muted mt-2">
                            @if (Model != null)
                            {
                                @String.Format("{0:MM/dd/yyyy}", Model.BirthDate);
                            }
                        </div>
                        <label class="col-md-2 col-form-label">Gender:</label>
                        <div class="col-md-2 text-muted mt-2">
                            @if (Model.Gender != null)
                            {
                                @Html.DisplayFor(m => m.Gender.GenderName)
                            }
                        </div>
                        <label class="col-md-2 col-form-label">Relationship:</label>
                        <div class="col-md-2 text-muted mt-2">
                            @if (Model.Relationship != null)
                            {
                                @Html.DisplayFor(m => m.Relationship.RelationshipName)
                            }

                        </div>


                    </div>
                    <div class="form-group row">
                        <label class="col-md-2 col-form-label" style="margin-left:0px">Status:</label>
                        <div class="col-md-2 text-muted mt-2">
                            @if (Model.DependentStatus != null)
                            {
                                @Html.DisplayFor(m => m.DependentStatus.StatusName)
                            }
                        </div>
                        <label class="col-md-3 col-form-label">Full-Time Student:</label>
                        <div class="col-md-1 text-muted mt-2">
                            @* @{ var IsFullTimeStudent = Model == null ? false : Model.IsFullTimeStudent ?? false; }*@
                            @Html.CheckBoxFor(model => model.IsFullTimeStudent, new { @disabled = "disabled" })

                        </div>
                        <label class="col-md-2 col-form-label">School Attending:</label>
                        <div class="col-md-2 text-muted mt-2">
                            @Html.DisplayFor(m => m.SchoolAttending)
                        </div>

                    </div>
                    <div class="form-group row">
                        <label class="col-md-3 col-form-label" style="margin-left:0px">Health Insurance:</label>
                        <div class="col-md-1 text-muted mt-2">
                            @* @{ var IsHealthInsurance = Model == null ? false : Model.IsHealthInsurance ?? false; }*@

                            @Html.CheckBoxFor(model => model.IsHealthInsurance, new { @disabled = "disabled" })

                        </div>
                        <label class="col-md-3 col-form-label">Dental Insurance:</label>
                        <div class="col-md-1 text-muted mt-2">
                            @*  @{ var IsDentalInsurance = Model == null ? false : Model.IsDentalInsurance ?? false; }*@
                            @Html.CheckBoxFor(model => model.IsDentalInsurance, new { @disabled = "disabled" })
                        </div>
                        <label class="col-md-3 col-form-label">Tax Purposes:</label>
                        <div class="col-md-1 text-muted mt-2">
                            @*  @{ var IsTaxPurposes = Model == null ? false : Model.IsTaxPurposes ?? false; }*@
                            @Html.CheckBoxFor(model => model.IsTaxPurposes, new { @disabled = "disabled" })

                        </div>

                    </div>

                    <div class="form-group row">

                        <label class="col-md-2 col-form-label" style="margin-left:0px">
                            Document Name:
                        </label>
                        <div class="col-md-2 text-muted mt-2">
                            @Html.DisplayFor(m => m.DocName)
                        </div>
                        <label class="col-md-2 col-form-label">Expiry Date:</label>
                        <div class="col-md-2 text-muted mt-2">
                            @if (Model != null)
                            {
                                @String.Format("{0:MM/dd/yyyy}", Model.ExpiryDate);
                            }

                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default" style="@ViewBag.EmployeeDependentStyle">
                <div class="panel-heading" style="padding-left:10px">Delete Employee Dependent</div>
                <div class="panel-body">
                    <div class="form-group row" style="margin-left:0px;margin-top:10px">
                        <div class="col-md-3">
                            Reason for Delete
                        </div>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.ReasonForDelete, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReasonForDelete, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
    @if (ViewBag.CanEmployeeDependantWorkflowIntiated.Count > 0)
    {
        <div style="color:red">
            Change request can not be submitted due to following reasons:
        </div>
        foreach (var each in ViewBag.CanEmployeeDependantWorkflowIntiated)
        {
            <div style="color:red">
                @each
            </div>
        }
    }
</div>
<div class="submit-section" style="display: flex;align-items: center;justify-content: center;">
    @if (ViewBag.CanEmployeeDependantWorkflowIntiated.Count == 0)
    {
        <button id="btnSaveEmployeeDependent" class="btn btn-primary submit-btn">Submit</button>
    }
    <button type="button" class="btn btn-primary submit-btn" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>
</div>
