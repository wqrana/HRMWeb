@model TimeAide.Web.Models.CompanyWithholding
<div style="padding:10px;padding-bottom:0px">
    @Html.Partial("_DeleteViewHeaderMaster")
    <div class="form-group row">
        <div class="col-md-6">
            <div class="form-group row">
                @Html.LabelFor(model => model.WithHoldingName, "Withholding Name", htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.DisplayFor(model => model.WithHoldingName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.WitholdingComputationTypeId, "Withholding Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-7">
                    @if (Model.WitholdingComputationType != null)
                    {
                        @(Html.DisplayFor(model => model.WitholdingComputationType.WitholdingComputationTypeName,new { htmlAttributes= new { @class = "form-control" } }))
                    }
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.WitholdingPrePostTypeId, "Pre/Post Tax Deduct", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-7">
                    @if (Model.WitholdingPrePostType != null)
                    {
                        @(Html.DisplayFor(model => model.WitholdingPrePostType.WitholdingPrePostTypeName, new { htmlAttributes= new { @class = "form-control" } }))
                    }
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.WithholdingTaxTypeId, "TaxType", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-7">
                    @if (Model.WithholdingTaxType != null)
                    {
                        @(Html.DisplayFor(model => model.WithholdingTaxType.WithholdingTaxTypeName, new { htmlAttributes= new { @class = "form-control" } }))
                    }
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.IsDeleted, "Is Deleted", htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    <div class="checkbox">
                        @Html.DisplayFor(model => model.IsDeleted)
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.GLAccountId, "WH GL Expense", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-7">
                    @if (Model.GLAccount != null)
                    {
                        @(Html.DisplayFor(model => model.GLAccount.GLAccountName, new { htmlAttributes= new { @class = "form-control" } }))
                    }
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">Employee Withholdings/Deductions</div>
                <div class="panel-body">
                    <div class="form-group row">
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.EmployeeWithholdingPercentage, "Deduct %:", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.EmployeeWithholdingPercentage, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.EmployeeWithholdingAmount, "Deduct Amount($):", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.EmployeeWithholdingAmount, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading">Compensation Limits</div>
                <div class="panel-body">
                    <div class="form-group row">
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.MaximumSalaryLimit, "Compensation Top($):", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.MaximumSalaryLimit, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.MinimumSalaryLimit, "Compensation Min($):", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.MinimumSalaryLimit, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading">Employee Loan @Html.DisplayFor(model => model.IsLoan)</div>
                <div class="panel-body">

                    <div class="form-group row">
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.CompanyWithholdingLoan.LoanDescription, "Loan Desc:", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.CompanyWithholdingLoan.LoanDescription, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.CompanyWithholdingLoan.LoanAmount, "Default Amount", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.CompanyWithholdingLoan.LoanAmount, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading">401K/ 1165(e) Settings</div>
                <div class="panel-body">
                    <div class="form-group row">
                        <div class="col-md-12">
                            @Html.DisplayFor(model => model.CompanyWithholding401K.Is401K1165eStTaxExempted) St Tax Exempt C401K/1165(e)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.CompanyWithholding401K.Withholding401KTypeId, "401K WH Type", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-7">
                            @if (Model.CompanyWithholding401K.Withholding401KType != null)
                            {
                                @(Html.DisplayFor(model => model.CompanyWithholding401K.Withholding401KType.Withholding401KTypeName, new { htmlAttributes= new { @class = "form-control" } }))
                            }
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.CompanyWithholding401K.EEMaxYearlyAmount, "Employee Yearly Max:", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.CompanyWithholding401K.EEMaxYearlyAmount, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.CompanyWithholding401K.ERMaxYearlyAmount, "Employee Yearly Min:", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.CompanyWithholding401K.ERMaxYearlyAmount, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">

            <div class="panel panel-default">
                <div class="panel-heading" style="padding-left:10px">
                    <div class="col-md-12 row">
                        <div class="col-md-8">
                            Excluded Compensations
                        </div>
                        <div class="col-md-4 pr-0">
                            <div class="pull-right dropdown-action">
                                <a href="#" class="action-icon dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="material-icons">more_horiz</i></a>
                                <div class="dropdown-menu dropdown-menu-right" x-placement="bottom-end" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(25px, 20px, 0px);">
                                    <a a href="javascript:;" data-toggle="modal" id="anchorEmploymentPrivilege" onclick="fnCompanyWithholding();" class="dropdown-item"><i class="fa fa-plus m-r-5"></i>Add</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="table-responsive">
                        <div id="divSupervisedEmployees">
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading" style="padding-left:10px">
                    <div class="col-md-12 row">
                        <div class="col-md-8">
                            PR Pay Export
                        </div>
                    </div>
                </div>
                <div class="panel-body" style="padding-left: 5px;">
                    <div class="table-responsive" style="padding-left:2px">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.CustomDeduction1, "Custom Deduction 1", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.CustomDeduction1)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.CustomDeduction2, "Custom Deduction 2", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.CustomDeduction2)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.CustomDeduction3, "Custom Deduction 3", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.CustomDeduction3)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.CustomDeduction4, "Custom Deduction 4", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.CustomDeduction4)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.CustomDeduction5, "Custom Deduction 5", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.CustomDeduction5)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsWithholding, "IsWithholding", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsWithholding)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsFICA, htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsFICA)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsSocialSecurity, htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsSocialSecurity)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsMedicalInsurance, htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsMedicalInsurance)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsDisability, htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsDisability)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsChauffeurInsurance, "CHOFERIL/ Chauffeur Insurance", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsChauffeurInsurance)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsOtherDeduction, "Other Deduction", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsOtherDeduction)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsHealthCoverageContribution, "Health Coverage Contribution", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsHealthCoverageContribution)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.Charitable_Contribution, "Charitable Contribution", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.Charitable_Contribution)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsMoneySaving, "Money Saving", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsMoneySaving)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsMedicarePlus, "Medicare Plus", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsMedicarePlus)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsCoda401K, "401K/Coda", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsCoda401K)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CompanyWithholdingPRPayExport.IsCodaExemptSalary, "Exempt Salary", htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-2">
                                <div class="checkbox">
                                    @Html.DisplayFor(model => model.CompanyWithholdingPRPayExport.IsCodaExemptSalary)
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Partial("_DeleteViewFooter")

<style>
    #myModaldialog {
        /*width: 1000px;
        max-width: 1000px !important;*/
        max-width: 65% !important;
        width: 65% !important;
        top: -25px !important;
    }

    .form-control {
        height: unset
    }

    .form-group {
        margin-bottom: .5rem;
    }

    .form-control {
        line-height: 1.0;
    }
</style>