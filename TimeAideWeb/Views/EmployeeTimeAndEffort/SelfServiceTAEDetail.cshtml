@model TimeAide.Models.ViewModel.EmployeeTimeAndEffortViewModel
@using TimeAide.Web.Models;
<style>
    .showField {
        display: block;
    }

    .hideField {
        display: none;
    }

    .table-avatar {
        align-items: center;
        display: inline-flex;
        font-size: small;
        font-weight: 400;
        margin: 0;
        padding: 0;
        vertical-align: middle;
        white-space: pre-wrap;
    }
    .div-emp-approval {
        font-size: smaller;
        /*font-weight: bold;*/
        /*font-family: 'Times New Roman', Times, serif;*/
    }
    .div-effort-info {
        border-left: 1px groove #cbc6c6;
        border-bottom: 1px groove #cbc6c6;
        font-size: small;
        font-weight: bold;
        font-family: 'Times New Roman', Times, serif;
        height: 40px;
        text-align: center;
        padding-left: 1px;
        overflow: hidden;
    }

    .div-effort-info-footer {
        border-left: 1px groove #cbc6c6;
        border-bottom: 1px groove #cbc6c6;
        font-size: medium;
        font-style: italic;
        font-weight: bold;
        font-family: 'Times New Roman', Times, serif;
        height: 40px;
        text-align: center;
        padding-left: 1px;
        overflow: hidden;
    }

    .div-effort-detail {
        border-bottom: 1px groove #cbc6c6;
        font-size: small;
        font-weight: normal;
        font-family: 'Times New Roman', Times, serif;
        height: 40px;
        text-align: left;
        padding-left: 1px;
        overflow: hidden;
    }

    .div-effort-detail-footer {
        border-bottom: 1px groove #cbc6c6;
        font-size: small;
        font-weight: bold;
        font-family: 'Times New Roman', Times, serif;
        height: 40px;
        text-align: left;
        padding-left: 1px;
        overflow: hidden;
    }

    .div-effort-detail-footer-total {
        border-bottom: 1px groove #cbc6c6;
        font-size: medium;
        font-weight: bold;
        font-style: italic;
        font-family: 'Times New Roman', Times, serif;
        height: 40px;
        text-align: left;
        padding-left: 1px;
        overflow: hidden;
    }

    .div-responsive {
        width: 100%;
        height: 400px;
        overflow: scroll;
        border: 1px solid #777777;
    }

        .div-responsive table {
            border-spacing: 0;
        }

        .div-responsive th {
            border-left: none;
            border-right: 1px solid #bbbbbb;
            padding: 5px;
            width: 100px;
            min-width: 100px;
            position: sticky;
            top: 0;
            background: #727272;
            color: #e0e0e0;
            font-weight: bolder;
            font-size: large;
        }

        .div-responsive td {
            border-left: none;
            border-right: 1px solid #bbbbbb;
            border-bottom: 1px solid #bbbbbb;
            padding: 5px;
            width: 100px;
            min-width: 100px;
            height: 70px;
        }

            .div-responsive th:nth-child(1),
            .div-responsive td:nth-child(1) {
                position: sticky;
                left: 0;
                width: 350px;
                min-width: 350px;
            }



            .div-responsive td:nth-child(1) {
                background: #dee2e6;
            }

            .div-responsive td:nth-child(2) {
                background: #f2f5fb;
            }

        .div-responsive th:nth-child(1) {
            z-index: 2;
        }
</style>

@if (Model != null)
{


<div class="col-auto float-right ml-auto mt-1 mb-1">
        <div class="btn-group btn-group-sm">
            @if (Model.IsEmployeeApproved == false)
            {
            <button class="btn btn-white" onclick="javascript:openEmployeeApprovalPopup('@Model.TAEId')"><i class="fa fa-check fa-lg"></i> Approve</button>
            }
            <button class="btn btn-white" onclick="javascript:runLocalReport('@Model.TAEId')"><i class="fa fa-print fa-lg"></i> Print</button>
        </div>
    </div>
    <div class="div-responsive">
        <table class="table-main" id="tblTimeAEffort">
            <thead>
                <tr class="">
                    <th></th>
                    <th>Total</th>
                    @*<th></th>*@
                    @foreach (var effortDate in ViewBag.EffortDateRange as List<DateTime>)
                    {
                        <th>@effortDate.ToShortDateString()</th>
                    }
                    <th style="display:none;"></th>
                </tr>
            </thead>
            <tbody>

                <tr>
                    <td>
                        <div class="row">
                            <div class="col-6 pr-0">
                                <h3 class="table-avatar">
                                    <a class="avatar avatar-xs" href="javascript:void();"><img alt="" src="assets/img/profiles/avatar-09.jpg"></a>
                                    <a href="javascript:void();">@Html.DisplayFor(m => m.EmployeeName)</a>
                                </h3>

                                @{
                                    var empStsCss = "bg-inverse-success";
                                    var empSts = "Approved";
                                    var supStsCss = "bg-inverse-success";
                                    var supSts = "Approved";
                                    if (!Model.IsEmployeeApproved)
                                    {
                                        empStsCss = "bg-inverse-danger";
                                        empSts = "Unapproved";

                                    }
                                    if (!Model.IsSupervisorApproved)
                                    {
                                        supStsCss = "bg-inverse-danger";
                                        supSts = "Unapproved";
                                    }
                                }
                            <div class="div-emp-approval">
                                <span class="">ID: @Html.DisplayFor(m => m.EmployeeId)</span>
                                <span class="d-block">Supervisor:<span class="badge @supStsCss">@supSts</span></span>
                                <span class="d-block">Employee:<span class="badge @empStsCss pl-2">@empSts</span></span>
                            </div>
                                @*<div class="">
            <button class="btn @empStsCss btn-sm" title="Click to change the status" onclick="javascript:employeeTAEApproval('@Model.TAEId')"><span class="small">@empSts</span> </button>
        </div>*@
                            </div>
                            <div class="col-6">
                                @{
                                    var effortTypeTotalHrs = new Dictionary<string, decimal>();
                                }
                                @foreach (var effortType in Model.EffortTypeRange)
                                {
                                    effortTypeTotalHrs.Add(effortType, 0);

                                    <div class="div-effort-info">
                                        @effortType
                                    </div>
                                }
                                <div class="div-effort-info-footer">
                                    Total:
                                </div>
                            </div>
                        </div>
                    </td>
                    <td id="td_tot_1">
                    </td>
                    @foreach (var effortDetail in Model.TimeAndEffortDetail)
                    {
                        <td>
                            @{ var totalEffortPct = 0;
                                var totalEfforHrs = effortDetail.EffortInfo.Sum(s => s.EffortHrs);

                                if (totalEfforHrs > 0)
                                {
                                    totalEffortPct = 100;
                                }
                            }

                            @foreach (var item in effortDetail.EffortInfo)
                            {

                                effortTypeTotalHrs[item.EffortTypeName] += item.EffortHrs;
                                decimal effortPct = 0;
                                if (totalEfforHrs > 0 && item.EffortHrs > 0)
                                {
                                    effortPct = Math.Round((item.EffortHrs / totalEfforHrs) * 100, 2);
                                }

                                <div class="div-effort-detail">
                                    @item.EffortHrs
                                    <span class="pull-right">@effortPct%</span>
                                </div>
                            }
                            <div class="div-effort-detail-footer">
                                @totalEfforHrs
                                <span class="pull-right">@totalEffortPct%</span>
                            </div>
                        </td>
                    }
                    <td id="td_1" style="display:none">
                        @{

                            decimal grandTotal = effortTypeTotalHrs.Sum(s => s.Value);
                            //decimal grandPct = 0;
                        }
                        @foreach (var effortTypeTot in effortTypeTotalHrs)
                        {
                            decimal totPct = 0;
                            if (grandTotal > 0 && effortTypeTot.Value > 0)
                            {
                                totPct = Math.Round((effortTypeTot.Value / grandTotal) * 100, 2);
                                //grandPct += totPct;
                            }
                            <div class="div-effort-detail-footer">
                                @effortTypeTot.Value
                                <span class="pull-right">@totPct%</span>

                            </div>
                        }
                        <div class="div-effort-detail-footer">
                            @{ 
                                var grandPct = 0;
                                if (grandPct > 0)
                                {
                                    grandPct = 100;
                                }
                              }
                            @grandTotal
                            <span class="pull-right">@grandPct%</span>
                        </div>
                    </td>
                </tr>


            </tbody>
        </table>
    </div>
}
else
{

    <h4 class="text-info">
        Time and Effort data is not available.
    </h4>

}

<script>
    $(document).ready(function () {


        $("#td_tot_1").html($("#td_1").html());

        var fileNameAndTitle = "Time & Effort";
        $('#tblScheduleCalendarPrint').DataTable({
            "paging": false,
            "info": false,
            "sorting": false,
            buttons: [
                {
                    extend: 'excel'
                },
                {
                    extend: 'pdf',
                    orientation: 'landscape',
                    pageSize: 'LEGAL',
                    filename: function () {
                        return fileNameAndTitle;
                    },
                    title: fileNameAndTitle,
                    customize: function (doc) {
                        //pageMargins [left, top, right, bottom]
                        // doc.pageMargins = [15, 20, 15, 20];
                    }
                },
            ]
        });

    });

    function openEmployeeApprovalPopup(id) {
        var dataObject = new Object();
        dataObject.TAEIds = id;
       
        $.ajax({
            type: "POST",
            url: '/EmployeeTimeAndEffort/TAEEmployeeApprovalPop',
            data: JSON.stringify(dataObject),

            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                $("#divAdhocPopup").html(data);
                $("#TAEEmployeeApproval_modal").modal("show");

            },
            error: function () {
                // displayWarningMessage(data.ErrorMessage);
            }
        });
    }
</script>

