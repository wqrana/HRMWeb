@model TimeAide.Web.Models.EmployeeTimeOffRequest
@Html.HiddenFor(m => m.AccrualType)
@Html.HiddenFor(m => m.RemainingTime)
@{
    ViewBag.Title = "Time-Off Request Approval";
    var workflowLevel = ViewBag.WorkflowLevel;
    var showTimeOffDoc = TimeAide.Services.ApplicationConfigurationService.GetConfigurationStatus("ShowTimeOffDocument");
}

<!-- Page Header -->
<div class="alert alert-primary" style="text-align:center;background-color: #00c5fb;border: 1px solid #00c5fb;">
    <h4 style="display: inline;">Time-Off Request</h4>
    <button class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">×</span>
    </button>
</div>
<!-- /Page Header -->
<div class="row">
    <div class="col-md-12 d-flex">

        <div class="card flex-fill mb-2">

            <div class="card-header" style="padding:15px;padding-bottom:0px;">
                <h3 class="card-title mb-1" id="">
                    Time-Off Request
                    @{ var requestStatus = Model.ChangeRequestStatusId;
                        var badgeCSS = "text-primary";
                        if (requestStatus >= 3)
                        {
                            badgeCSS = "text-danger";
                        }
                        else if (requestStatus == 2)
                        {
                            badgeCSS = "text-success";
                        }}
                    <span class="pt-2 @badgeCSS" style="font-size:90%;">(@Model.ChangeRequestStatus.ChangeRequestStatusName)</span>
                    <span class="pull-right" style="font-size:90%;">Workflow Level:(<span class="text-info font-weight-bolder">@workflowLevel</span>)</span>
                </h3>

                <div class="row pb-0">
                    <div class="col-lg-10">
                        <ul class="list-unstyled">
                            <li><h4 class="mb-0"> @Html.DisplayFor(m => m.UserInformation.ShortFullName)</h4></li>
                            <li>Employee ID: @Html.DisplayFor(m => m.UserInformation.EmployeeId)</li>
                        </ul>
                    </div>
                    @*<div class="col-lg-2">
                        @if (showTimeOffDoc == true && Model.CanTakeAction == true)
                        {
                            <div class="action-label pull-right">
                                <span class="btn btn-white btn-sm btn-rounded" onclick="javascript:getTimeOffRequestDocument(@Model.Id);">
                                    <i class="fa fa-dot-circle-o text-secondary"></i>Check Doc(s)
                                </span>
                            </div>
                        }
                    </div>*@
                </div>
            </div>
            <div class="card-body pb-0">
                <div class="form-group row">
                    <label class="col-md-2 col-form-label pr-0">Type: <span class="text-danger"></span></label>
                    <div class="col-md-3 text-muted mt-2">
                        @Html.DisplayFor(m => m.TransType)
                    </div>
                    <label class="col-md-2 col-form-label pr-0">From: <span class="text-danger"></span></label>
                    <div class="col-md-2 text-muted mt-2">
                        @Html.DisplayFor(m => m.StartDate)
                    </div>
                    <label class="col-md-1 col-form-label pr-0">To: <span class="text-danger"></span></label>
                    <div class="col-md-2 text-muted mt-2">
                        @Html.DisplayFor(m => m.EndDate)
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-md-2 col-form-label pr-0">License: <span class="text-danger"></span></label>
                    <div class="col-md-3  text-muted mt-2">
                        @Html.DisplayFor(m => m.AccrualType)
                    </div>
                    <label class="col-md-2 col-form-label pr-0">Available Bal.: <span class="text-danger"></span></label>
                    <div class="col-md-2  text-muted mt-2">
                        @{ var balanceStr = Model.AccrualType == "NO" ? "N/A" : Model.Balance.ToString() + " Hrs"; }
                        @balanceStr
                    </div>
                    <div class="col-md-2">
                        @if (showTimeOffDoc == true && Model.CanTakeAction == true)
                        {
                            <div class="action-label">
                                <span class="btn btn-white btn-sm btn-rounded" onclick="javascript:getTimeOffRequestDocument(@Model.Id);">
                                    <i class="fa fa-dot-circle-o text-secondary"></i>Document(s)
                                </span>
                            </div>
                        }
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-md-2 col-form-label pr-0">Hour(s) in Day: <span class="text-danger"></span></label>
                    <div class="col-md-3 text-muted mt-2">
                        @Html.DisplayFor(m => m.DayHours)
                    </div>
                    <label class="col-md-2 col-form-label pr-0">Work-Day(s): <span class="text-danger"></span></label>
                    <div class="col-md-2 text-muted mt-2">
                        @Html.DisplayFor(m => m.WorkingDays)
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-md-2 col-form-label pr-0">Requested Time(Hrs): <span class="text-danger"></span></label>
                    <div class="col-md-3 text-muted mt-2">

                        @Html.DisplayFor(m => m.RequestedTime)
                    </div>
                    <label class="col-md-2 col-form-label pr-0">Remaining Time(Hrs): <span class="text-danger"></span></label>
                    @{ var CSSTextAlert = "";
                        if (Model.AccrualType != "NO" && Model.RequestedTime < 0)
                        {
                            CSSTextAlert = "text-danger";
                        }
                    }
                    <div class="col-md-2 text-muted mt-2  @CSSTextAlert">
                        @{ var remainingTimeStr = Model.AccrualType == "NO" ? "N/A" : String.Format("{0:0.00}", Model.RemainingTime); }
                        @Html.DisplayFor(m => remainingTimeStr)
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-md-2 col-form-label">Reason: <span class="text-danger"></span></label>
                    <div class="col-md-9 text-muted mt-2">
                        @Html.DisplayFor(m => m.RequestNote)
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-md-2 col-form-label">Remarks: <span class="text-danger">*</span></label>
                    <div class="col-md-9 pr-0">
                        @if (Model.CanTakeAction == true)
                        {
                            <textarea rows="2" class="form-control" id="ChangeRequestRemarks"></textarea>
                        }
                        else
                        {
                            <textarea rows="2" class="form-control" id="ChangeRequestRemarks" disabled="disabled"></textarea>
                        }
                    </div>
                </div>
            </div>
            <div class="card-footer" style="text-align:center;">
                <div id="divLoadingTimeOffRequestAction" class="align-content-md-start submit-in-processing" style="display:none;">
                    <img src="~/Content/Themes/assets/img/ajax-loading.gif" width="18" height="18" />
                </div>
                @*@if (ViewBag.CanTakeAction == true)*@
                @if (Model.CanTakeAction == true)
                {
                    <button id="btnApproveTimeOffRequest" class="btn btn-success submit-btn" onclick="javascript:saveTimeOffRequestAction(2)">Approve</button>
                    <button id="btnDeclineTimeOffRequest" class="btn btn-danger  submit-btn" onclick="javascript:saveTimeOffRequestAction(3)">Decline</button>
                }
                <button type="button" class="btn btn-primary submit-btn" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span>Close</button>
                @*@if (ViewBag.CanTakeAction == false)*@
                @if (Model.CanTakeAction == false)
                {
                    <div class="">
                        @{
                            var statementTxt = "not authorize or an appropriate action has already been taken!";
                            switch (Model.ChangeRequestStatusId)
                            {
                                case 2:
                                    statementTxt = "an approved action has already been taken";
                                    break;
                                case 3:
                                    statementTxt = "a declined action has already been taken";
                                    break;
                            }
                            statementTxt = "View only mode, " + statementTxt;
                            if (Model.CanRequiredDocument == true)
                            {
                                statementTxt = "Time-Off mandatory/conditional mandatory document(s) are not yet submitted. Time-off request can't be approved.";
                            }
                        }
                        <h4 class="text-center text-danger">
                            @statementTxt
                        </h4>
                    </div>
                }
            </div>

        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        //$("#divLoadingTimeOffRequestAction").hide();
        debugger;
        getPostSubmitRequestDocumentView();
    });
    function getPostSubmitRequestDocumentView() {
        debugger;
        $.ajax({
            type: "GET",
            url: '/EmployeeTimeOffRequestDocument/PostSubmitRequestDocumentView',
           
            success: function (data) {
                debugger;
                $("#divAdhocReportPopup").html(data);
                //$("#timeOffRequestStatusHistory_modal").modal("show");
            },
            error: function () {
            }
        });
    }
    function saveTimeOffRequestAction(actionId) {
        debugger;

        var dataObject = new Object();
        dataObject.Id = @Model.Id;
        dataObject.ChangeRequestStatusId = actionId;
        dataObject.ChangeRequestRemarks = $('#ChangeRequestRemarks').val();
        if ($("#AccrualType").val() != "NO" && $("#RequestedTime").val()< 0 && actionId == 2) {
            showAlertAutoHide("", "Error", "Request can't be approved, requested time is more than the current available balance.");
            return;
        }
        if (dataObject.ChangeRequestRemarks == "") {
            showAlertAutoHide("", "Error", "Please Enter the Remarks.");
            return;
        }
       // $(".submit-btn").attr('disabled', 'disabled');
        //$("#divLoadingTimeOffRequestAction").show();
        disabledSubmitAction(true);
        $.ajax({
            url: "/EmployeeTimeOffRequest/ApproveTimeOffRequest",
            type: "POST",
            data: JSON.stringify(dataObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                debugger;
                if (data.status == "Success") {
                    console.log(data);
                    showAlertAutoHide("", data.status, data.message);
                    RefreshBellIconCount('');
                    /*window.location = "/UserDashboard/MyDashboard";*/
                    $('#myModal').modal('hide');
                }
                else if (data.status == "Error") {
                    //$(".submit-btn").removeAttr('disabled');
                    //$("#divLoadingTimeOffRequestAction").hide();
                    disabledSubmitAction(false);
                    showAlertAutoHide("", "Error", data.message);
                    if (data.canApprove == false) {
                        $("#btnApproveTimeOffRequest").attr('disabled', 'disabled');
                    }

                }

            }
            ,
            error: function (data) {
                showAlertAutoHide("", "Error", data.message);

            }
        });
    }
</script>
<style>
    #myModaldialog {
        width: 60%;
        max-width: 60% !important;
        /*width: 500px;
        max-width: 700px;*/
    }
</style>