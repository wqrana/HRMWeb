@using TimeAide.Data;
@model IEnumerable<TimeAide.Web.Models.AccrualRuleTier>

<div class="table-responsive">
    <table class="table table-striped custom-table table-nowrap mb-0" id="">
        <thead>
            <tr>
                <th></th>
                <th>TierNo</th>
                <th>Description</th>
                <th>Years Range </th>
                <th>Min. Hrs?</th>
                <th>Hrs. Tier(s)</th>
                <th>Waiting Period</th>
                <th>Excess Max</th>
                <th>Max Hrs.</th>
                <th>Excess Code</th>
                <th>Reset Accrued</th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <div class="pull-right dropdown-action">
                        <a href="#" class="action-icon dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="material-icons">more_horiz</i></a>
                        <div class="dropdown-menu dropdown-menu-right" x-placement="bottom-end" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(25px, 20px, 0px);">

                            <a href="javascript:createEditAccrualRuleTier(@item.Id,1);" class="dropdown-item" data-id="@item.Id"><i class="fa fa-pencil m-r-5"></i> Edit</a>
                            <a href="javascript:getAccrualRuleTierDetail(@item.Id);" class="dropdown-item"><i class="fa fa-eye m-r-5"></i> Details</a>
                            <a href="javascript:getAccrualRuleTierDeleteData(@item.Id);" class="dropdown-item"><i class="fa fa-trash m-r-5"></i> Delete</a>
                        </div>
                    </div>
                </td>
                <td>
                    <a href='javascript:getAccrualRuleTierDetail(@item.Id)' title="View"> @Html.DisplayFor(modelItem => item.TierNo)</a>
                    <a class="pl-1" href='javascript:createEditAccrualRuleTier(@item.Id,1)' title="Edit"> <span class="fa fa-pencil"></span></a>
                </td>
                <td>
                    @Html.DisplayFor(m => item.TierDescription)
                </td>
                <td>
                    @{
                        var yearRange = string.Format("{0} - {1}", (item.YearsWorkedFrom ?? 0), (item.YearsWorkedTo ?? 0));
                    }
                    @Html.DisplayFor(m => yearRange)
                </td>
                <td>
                    @Html.DisplayFor(m => item.MinWorkedHoursType)
                </td>
                <td>
                    @{ 
                      var workHrsTiers=  item.AccrualRuleWorkedHoursTiers.Where(w => w.DataEntryStatus == 1).Count();
                    }
                    @workHrsTiers
                </td>
                <td>
                    @Html.DisplayFor(m => item.WaitingPeriodType) &nbsp;&nbsp;@Html.DisplayFor(m => item.WaitingPeriodLength)&nbsp;Month(s)
                </td>
                <td>
                    @{
                        var maxHoursType = item.AllowedMaxHoursTypeId == null ? "" : DataHelper.AccuralExcessMaxType[item.AllowedMaxHoursTypeId ?? 0];
                    }
                    @Html.DisplayFor(m => maxHoursType)
                </td>
                <td>
                    @Html.DisplayFor(m => item.AllowedMaxHours)
                </td>
                <td>
                    @Html.DisplayFor(m => item.AccrualTypeExcess)
                </td>
                <td>
                    @{
                        var resetType = item.ResetAccruedHoursTypeId == null ? "" : DataHelper.AccuredResetType[item.ResetAccruedHoursTypeId ?? 0];
                    }
                    @Html.DisplayFor(m => resetType)
                </td>
            </tr>
        }

    </table>
</div>
