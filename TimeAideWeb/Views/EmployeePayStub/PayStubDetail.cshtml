@using TimeAide.Web.Models;
@using TimeAide.Common.Helpers;
@model EmployeePayStubBatch

@{
  
    EmployeePayStubCompany employeePayStubCompany = (EmployeePayStubCompany)ViewBag.PayStubCompanyInfo;
    List<EmployeePayStubCompensation> employeePayStubEarnings = (List<EmployeePayStubCompensation>)ViewBag.PayStubCompensations;
    List<EmployeePayStubWithholding> employeePayStubDeductions = (List<EmployeePayStubWithholding>)ViewBag.payStubWithholdings;
    var netPayInWords = DecimalToWordExtension.ToWords(Model.decBatchNetPay.Value);
}
@*<link href="https://unpkg.com/gijgo@1.9.13/css/gijgo.min.css" rel="stylesheet" type="text/css" />*@

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col">
                        <h4 class="payslip-title">Pay Stub</h4>
                    </div>
                    <div class="col-auto float-right ml-auto">
                        <div class="btn-group btn-group-sm">
                            @Html.HiddenFor(m => m.strBatchID)
                            @Html.HiddenFor(m => m.intUserID)
                            <button class="btn btn-white" onclick='javascript:runLocalReport()'><i class="fa fa-print fa-lg"></i> Print</button>
                        </div>
                    </div>

                </div>
                <div class="row pb-0">
                    <div class="col-sm-6 m-b-20">

                        @if (employeePayStubCompany.CompanyLogo != null && employeePayStubCompany.CompanyLogo.Length > 0)
                        {
                            var base64 = Convert.ToBase64String(employeePayStubCompany.CompanyLogo);
                            var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                            <img src="@imgsrc" class="inv-logo" alt="">
                        }


                        <ul class="list-unstyled mb-0">
                            <li>@Html.DisplayFor(m => m.strCompany)</li>
                            <li>@Html.DisplayFor(m => employeePayStubCompany.strAddress1),</li>
                            <li>@Html.DisplayFor(m => employeePayStubCompany.strCity), @Html.DisplayFor(m => employeePayStubCompany.strState), @Html.DisplayFor(m => employeePayStubCompany.strZipCode)</li>
                        </ul>
                    </div>
                    <div class="col-sm-6 m-b-20">
                        <div class="invoice-details">
                            <h4 class="text-uppercase">Pay Week:@Html.DisplayFor(m => m.intPayWeekNum)</h4>
                            <ul class="list-unstyled">
                                @{
                                    var dtPayDateStr = Model.dtPayDate.ToString("MM/dd/yyyy");
                                    var dtStartDatePeriodStr = Model.dtStartDatePeriod.ToString("MM/dd/yyyy");
                                    var dtEndDatePeriodStr = Model.dtEndDatePeriod.ToString("M/dd/yyyy");
                                }
                                <li>Pay Date: <span>@Html.DisplayFor(m => dtPayDateStr)</span></li>
                                <li>Start Period: <span>@Html.DisplayFor(m => dtStartDatePeriodStr)</span></li>
                                <li>End Period: <span>@Html.DisplayFor(m => dtEndDatePeriodStr)</span></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="row pb-0">
                    <div class="col-lg-12 m-b-20">
                        <ul class="list-unstyled">
                            <li><h4 class="mb-0"><strong>@Html.DisplayFor(m => m.strUserName)</strong></h4></li>
                            <li>Employee ID: @Html.DisplayFor(m => m.intUserID)</li>

                        </ul>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div>
                            <h4 class="m-b-10"><strong>Earnings</strong></h4>
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th><strong>Type</strong></th>
                                        <th><strong>Rate</strong></th>
                                        <th><strong>Hours</strong></th>
                                        <th><strong>Amount</strong></th>
                                        <th><strong>YTD</strong></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in employeePayStubEarnings)
                                    {
                                    <tr>
                                        <td width="40%">@Html.DisplayFor(m => item.strCompensationName)</td>
                                        <td width="15%">$@Html.DisplayFor(m => item.decPayRate)</td>
                                        <td width="15%">@Html.DisplayFor(m => item.decHours)</td>
                                        <td width="15%">$@Html.DisplayFor(m => item.decPay)</td>
                                        <td width="15%">$@Html.DisplayFor(m => item.decPayYTD)</td>
                                    </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th><strong>Total Earnings</strong></th>
                                        <th colspan="4"><strong>$@Html.DisplayFor(m => m.decBatchUserCompensations)</strong></th>

                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div>
                            <h4 class="m-b-10"><strong>Deductions</strong></h4>
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th><strong>Type</strong></th>
                                        <th><strong>Amount</strong></th>
                                        <th><strong>YTD</strong></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in employeePayStubDeductions)
                                    {
                                        <tr>
                                            <td width="70%">@Html.DisplayFor(m => item.strWithHoldingsName)</td>
                                            <td width="15%">$@Html.DisplayFor(m => item.decWithholdingsAmount)</td>
                                            <td width="15%">$@Html.DisplayFor(m => item.decWithholdingsYTD)</td>
                                        </tr>

                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th><strong>Total Deductions</strong></th>
                                        <th colspan="2"><strong>$@Html.DisplayFor(m => m.decBatchUserWithholdings)</strong></th>

                                    </tr>
                                </tfoot>

                            </table>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <h4>Net Salary: $@Html.DisplayFor(m => m.decBatchNetPay)<span style="font-size:medium;font-weight:100;padding-left:2px;">(@Html.DisplayFor(m => netPayInWords) only.)</span></h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
