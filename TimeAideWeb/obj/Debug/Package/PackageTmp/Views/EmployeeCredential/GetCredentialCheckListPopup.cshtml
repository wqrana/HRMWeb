@model IEnumerable<TimeAide.Web.Models.EmployeeCredential>
<style>
    .dropdown-menu {
        position: relative;
    }
    .dt-button-collection {
        width: 175px;
    }
</style>
<div id="CredentialChecklist_modal" class="modal custom-modal">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">

            <div class="mt-2 p-1">
                <div class="alert alert-primary" style="text-align:center;background-color: #00c5fb;border: 1px solid #00c5fb;">
                    <h4 style="display: inline;">Credential(s) Checklist</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <hr>
            </div>
            <div class="modal-body pt-0">
                <div class="mt-4">
                    <div class="table-responsive" style="min-height:350px; max-height:600px; overflow-y:auto">
                        <table class="table table-striped custom-table table-nowrap mb-0" id="tblAllCredentials">
                            <thead>
                                <tr>
                                    <th>
                                        Credential
                                    </th>
                                    <th>Type</th>
                                    <th>Submitted</th>
                                    <th>
                                        Credential Id
                                    </th>
                                    <th>Document</th>
                                    <th>
                                        Description
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.IssueDate)
                                    </th>
                                    <th>
                                        Exp. Date
                                    </th>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Note)
                                    </th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Credential.CredentialName)
                                        </td>
                                        <td>
                                            @{ var isRequired = item.IsRequired == true ? "Required" : "Not Required";}
                                            @isRequired
                                        </td>
                                        <td>
                                            @{ var submitted = item.Id == 0 ? "No" : "Yes";}
                                            @Html.DisplayFor(modelItem => submitted)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.EmployeeCredentialName)
                                        </td>
                                        <td>
                                            @{ var IsUploaded = string.IsNullOrEmpty(item.DocumentPath) ? "No" : "Yes";}

                                            @Html.DisplayFor(modelItem => IsUploaded)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.EmployeeCredentialDescription)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.IssueDate)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ExpirationDate)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Note)
                                        </td>

                                    </tr>
                                }

                            </tbody>
                            <tfoot>

                            </tfoot>
                        </table>
                    </div>
                </div>
                <div class="submit-section mt-1">
                   <button id="btnCancel" class="btn btn-primary  submit-btn" data-dismiss="modal" aria-label="Close">Close</button>
                </div>


            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {
        var indexColumns = $("#tblAllCredentials > thead > tr:first > th").length;        
        var exportColumns = "[";
        for (let i = 0; i < indexColumns; i++) {
            exportColumns += i + ","
        }
        if (indexColumns > 0) {
            exportColumns = exportColumns.slice(0, -1)
        }
        exportColumns += "]";
        //alert(exportColumns);

        debugger;
        var fileNameAndTitle = 'Employee Credentials';
        var fileTitle = "Checklist";        
        var tblEmployeeCredentialsIndex = $('#tblAllCredentials').DataTable({
            searching: true,
            sDom: '<"top"i>rt<"bottom"flp><"clear">',         
            "bLengthChange": false,
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'copyHtml5',
                    text: '<i class="fa fa-files-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'Copy',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    }
                },
                {

                    extend: 'excelHtml5',
                    filename: function () {
                        return fileNameAndTitle + '(' + fileTitle + ')';
                    },
                    messageTop: fileNameAndTitle,
                    title: fileTitle,
                    text: '<i class="fa fa-file-excel-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'Excel',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    }
                },
                {
                    extend: 'csvHtml5',
                    filename: function () {
                        return fileNameAndTitle + '(' + fileTitle + ')';
                    },
                    messageTop: fileNameAndTitle,
                    title: fileTitle,
                    text: '<i class="fa fa-file-text-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'CSV',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    }
                },
                {
                    extend: 'pdfHtml5',
                    filename: function () {
                        return fileNameAndTitle + '(' + fileTitle + ')';
                    },
                    messageTop: fileNameAndTitle,
                    title: fileTitle,
                    text: '<i class="fa fa-file-pdf-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'PDF',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    }
                },
                {
                    extend: 'collection',
                    className: 'btn-primary',
                    text: 'All',
                    buttons: [
                        {
                            text: 'All', action: function (e, dt, node, config) {
                                tblEmployeeCredentialsIndex
                                    .columns(1)
                                    .search('')
                                    .draw();
                                tblEmployeeCredentialsIndex.button(4).text("All");
                            }
                        },
                        {
                            text: 'Required', action: function (e, dt, node, config) {
                                tblEmployeeCredentialsIndex
                                    .columns(1)
                                    .search("^" + "Required" + "$", true, true, false)
                                    .draw();
                                tblEmployeeCredentialsIndex.button(4).text('Required');
                            }
                        },
                        {
                            text: 'Not Required', action: function (e, dt, node, config) {
                                tblEmployeeCredentialsIndex
                                    .columns(1)
                                    .search("Not Required")
                                    .draw();
                                tblEmployeeCredentialsIndex.button(4).text("Not Required");
                            }
                        },
                    ],
                    
                    autoClose: true
                   
                }             
            ],
        });

    });
</script>
