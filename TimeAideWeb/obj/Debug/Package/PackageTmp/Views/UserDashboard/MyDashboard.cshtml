@using TimeAide.Services.Helpers;
@using TimeAide.Common.Helpers;
@model TimeAide.Web.ViewModel.DashboardViewModel
@{ ViewBag.Title = "Self Service";
    Layout = "~/Views/Shared/_Layout.cshtml"; }
@{ //var id = TimeAide.Common.Helpers.SessionHelper.LoginId; 
    var id = Model.UserId;
    var encryptedId = Model.EncryptedUserId;
}
<!-- Page Header -->
<div class="page-header">
    <div class="row align-items-center">
        <div class="col-sm-12">
            <h3 class="page-title">Self Service</h3>
            @*<ul class="breadcrumb">
                    <li class="breadcrumb-item">Dashboard</li>
                    <li class="breadcrumb-item active">Employee Dashboard</li>

                </ul>*@

        </div>

    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="welcome-box mb-2 pb-0">
            <div class="welcome-img">
                <img alt="" src="@Model.UserProfilePicture">
            </div>
            <div class="welcome-det">
                <h3>Welcome, @Html.DisplayFor(m => m.UserName)</h3>
                <p>@DateTime.Now.ToString("dddd, dd MMMM yyyy")</p>
                @if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ShowViewProfile"))
                {
                    <p>
                        <i class="fa fa-user-circle text-success mr-2"></i><a href="/UserInformation/EmployeeProfile/@encryptedId" style="color:#007bff;" title="View Profile">View Profile</a>
                    </p>
                }
                @if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ShowJobCertification(link)"))
                {
                    <p>
                        <i class="fa fa-certificate text-primary mr-2"></i><a href="javascript:generateJobCertificate(@id,2)" style="color:#007bff;" title="View Profile">Job Cert.</a>
                    </p>
                }
            </div>

        </div>
    </div>
</div>
<div class="row">
    @if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ShowMyNotifications"))
    {
        <div class="col-md-12 col-lg-6 col-xl-4 d-flex pl-0">
            <div class="card flex-fill mb-2">
                <div class="card-body pb-0">
                    <h4 class="card-title" style="margin-left:-10px;margin-right:-10px;">
                        My Notification(s)
                        <span class="pull-right" style="font-size:x-small;">
                            <select id="myNotificationPeriodType">
                                <option value="0">Today</option>
                                <option value="1">This Week</option>
                                <option value="2">Two Weeks</option>
                                <option value="3">One Month</option>
                                <option value="4" selected>Quarter</option>
                                <option value="6">Semester</option>
                                <option value="12">One Year</option>
                            </select>
                        </span>
                    </h4>
                    <div id="divLoadingMyNotificationWidget" class="align-content-md-start">
                        <img src="~/Content/Themes/assets/img/ajax-loading.gif" width="18" height="18" />
                    </div>
                    <div id="divDashboardMyNotiRecord">

                        <div class="statistics">
                            <div class="row">
                                <div class="col-md-6 col-6 text-center">
                                    <a href="">
                                        <div class="stats-box mb-4">
                                            <p>Notifying</p>

                                            <h3>0</h3>

                                        </div>
                                    </a>
                                </div>
                                <div class="col-md-6 col-6 text-center">
                                    <a href="">
                                        <div class="stats-box mb-4">
                                            <p>Expired</p>
                                            <h3>0</h3>
                                        </div>
                                    </a>
                                </div>

                            </div>
                        </div>
                        <div class="progress mb-4">
                            <div class="progress-bar bg-warning" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
                            <div class="progress-bar bg-danger" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>

                        </div>
                        <div>

                            <p><i class="fa fa-dot-circle-o text-warning mr-2"></i>Notifying <span class="float-right"></span></p>

                            <p><i class="fa fa-dot-circle-o text-danger mr-2"></i>Expired <span class="float-right"></span></p>

                        </div>
                    </div>
                </div>
                <div class="card-footer" style="text-align:center;">
                    <a href="javascript:loadMyNotificationWidgetDetail();" class="fa fa-refresh"></a>
                </div>
            </div>
        </div>
    }
    @Html.Hidden("IsTimeAideWindowClient", SessionHelper.IsTimeAideWindowClient)
    @if (SessionHelper.IsTimeAideWindowClient)
    {
        if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ShowCurrentSchedule"))
        {
            <div class="col-md-4 d-flex pl-0">

                <div class="card flex-fill mb-2">
                    <div id="divLoadingCurrentSchedule" class="align-content-md-start">
                        <img src="~/Content/Themes/assets/img/ajax-loading.gif" width="18" height="18" />
                    </div>

                    <div class="card-header" style="padding:15px;">
                        <h3 class="card-title mb-0" id="">
                            Current Schedule
                            <span class="float-right pt-2" style="font-size:x-small;" id="spanScheduleDateRange">-</span>
                        </h3>
                    </div>
                    <div class="card-body pb-0">

                        <div>
                            <p><i class="fa fa-dot-circle-o text-success mr-2"></i>Working Day(s) <span class="float-right" id="spanWorkingDays">-</span></p>

                            <p><i class="fa fa-dot-circle-o text-info mr-2"></i>Total Hour(s) <span class="float-right" id="spanTotalHours">-</span></p>

                        </div>

                    </div>
                    <div class="card-footer" style="text-align:center;">
                        @if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ViewScheduleOnWidget"))
                        {
                            <a href="javascript:viewCurrentScheduleDetail('@encryptedId');">View Schedule</a>
                        }
                    </div>
                </div>
            </div>
        }
        if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ViewTodayOnWidget"))
        {
            <div class="col-md-4 d-flex pl-0">
                <div class="card card-table flex-fill mb-2">
                    <div class="card-header">
                        <h3 class="card-title mb-0" id="notificationTypeList">Today</h3>
                    </div>
                    <div class="card-body" style="padding:15px;">
                        <div id="divTodayPunchaData" style="font-size: 105%;">

                        </div>
                    </div>
                    <div class="card-footer" style="text-align:center;">
                        @if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ViewTimeSheetOnWidget"))
                        {
                            <a href="javascript:viewTimeSheetDetail('@encryptedId');">View Time Sheet</a>
                        }
                    </div>
                </div>
            </div>
        }
        if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ShowLicenses"))
        {
            <div class="col-md-4 d-flex pl-0">
                <div class="card flex-fill mb-2">
                    <div class="card-header">
                        <h3 class="card-title mb-0" id="licensesList">Licenses</h3>
                    </div>
                    <div class="card-body p-0">
                        <div id="divLoadingMyLicensesList" class="align-content-md-start">
                            <img src="~/Content/Themes/assets/img/ajax-loading.gif" width="18" height="18" />
                        </div>
                        <div id="divDashboardMyLicensesList" style="max-height:200px; overflow-y:auto">
                            <div class="table-responsive">
                                <table class="table table-nowrap custom-table mb-0">
                                    <thead>
                                        <tr>

                                            <th>Accrual Type</th>
                                            <th>Balances</th>
                                            <th>SearchDate</th>

                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer" style="text-align:center;">
                        @if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ViewTimeOffDetailOnWidget"))
                        {
                            <a href='javascript:viewTimeOffDetail("@encryptedId");'>View Time Off Detail</a>
                        }
                    </div>
                </div>
            </div>
        }
        if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ShowPayStub"))
        {
            <div class="col-md-4 d-flex pl-0">
                <div class="card flex-fill mb-2">
                    <div class="card-body pb-0">
                        <h4 class="card-title" style="margin-left:-10px;margin-right:-10px;">
                            Pay Stub
                            <span class="pull-right" style="font-size:x-small;">
                                <select id="payStubBatchList">
                                    <option value="0">--------------</option>

                                </select>
                            </span>
                        </h4>
                        <div id="divLoadingPayStubWidget" class="align-content-md-start">
                            <img src="~/Content/Themes/assets/img/ajax-loading.gif" width="18" height="18" />
                        </div>
                        <div id="divDashboardPayStubRecord">

                            <div>
                                <p>Name <span class="float-right" id="payStubBatchName">-</span></p>
                                <p>Pay Date <span class="float-right" id="payStubPayDate">-</span></p>
                                @* <p>Period Start <span class="float-right" id="payStubStartDate">-</span></p>
                                    <p>Period End <span class="float-right" id="payStubEndDate">-</span></p>*@
                                <p>Pay Period <span class="float-right" id="payStubPayPeriod">-</span></p>
                                <p>Earnings <span class="float-right" id="payStubEarning">$</span></p>
                                <p>Deductions <span class="float-right" id="payStubDeduction">$</span></p>
                                <p>Net Pay <span class="float-right" id="payStubNetPay">$</span></p>

                            </div>
                        </div>
                    </div>
                    <div class="card-footer" style="text-align:center;">
                        @if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ViewPayStubDetailOnWidget"))
                        {
                            <a href="javascript:viewPayStubDetail();">View Pay Stub Detail</a>
                        }
                    </div>
                </div>
            </div>
        }
    }
    @if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("EnableEmployeePunchClock") && SecurityHelper.HasEmployeeTimeAndAttendanceSetting)
    {
        <div class="col-md-12 col-lg-6 col-xl-4 d-flex pl-0">
            <div class="card flex-fill mb-2">
                <div class="card-body  pb-0">
                    <h5 class="card-title" style="text-align:center">Web Punch Clock</h5>
                    <div id="divLoadingWebPunchSummary" class="align-content-md-start">
                        <img src="~/Content/Themes/assets/img/ajax-loading.gif" width="18" height="18" />
                    </div>
                    @if (!SecurityHelper.HasServiceConfiguration)
                    {
                        <div class="error-box">
                            <h3 class="text-danger"><i class="fa fa-warning"></i>Web punch service is not configured.Please contact your system administrator!</h3>
                        </div>
                    }
                    else
                    {
                        <div id="divWebPunchSummary"></div>
                    }
                </div>
                <div class="card-footer" style="text-align:center;">
                    <a href="javascript:getWebPunchSummary();" class="fa fa-refresh"></a>
                </div>
            </div>
        </div>
        <div id="confirmPunch_modal" class="modal">
            <div class="modal-dialog" style="max-width:40%">
                <div class="modal-content" style="padding:10px">
                    <div class="modal-header alert alert-primary" style="text-align:center;background-color: #00c5fb;border: 1px solid #00c5fb;padding:10px">
                        <h4 class="modal-title">Test Email</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-header alert alert-warning" style="text-align:center;border: 1px solid #00c5fb;padding:10px">
                        Below information is only to test configuration, This information is not stored in database
                    </div>
                    <div class="modal-body">
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label" style="margin-left:10px">
                                To Email:
                            </label>
                            <div class="col-md-8">
                                <input type="text" id="ToEmailForTest" name="ToEmailForTest" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label" style="margin-left:10px">
                                Sample Email Subject:
                            </label>
                            <div class="col-md-8">
                                <input id="TestEmailSubject" name="TestEmailSubject" value="Test Subject" class="form-control">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-3 col-form-label" style="margin-left:10px">
                                Test Email Body:
                            </label>
                            <div class="col-md-8">
                                <textarea id="TestEmailBody" name="TestEmailBody" rows="10" cols="50" class="form-control">This is test email!</textarea>
                            </div>
                        </div>
                        <div class="submit-section">
                            <button type="button" onclick="fnTestEmail();" class="btn btn-primary submit-btn">Test Email</button>
                            <button type="button" onclick="fnClose();" class="btn btn-primary submit-btn">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="confirmPunch_modal1" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #00c5fb; border: 1px solid #00c5fb;">
                        <h5 class="modal-title">Punch Clock confirmation</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p id="divconfirmPunch" style="display: inline;">Are you sure to punch clock at <p style="color: blue; display: inline;">@DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss tt")</p>.</p>
                    </div>
                    <div id="divLoadingWebPunchConfirmation" class="align-content-md-start">
                        <img src="~/Content/Themes/assets/img/ajax-loading.gif" width="18" height="18" />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="webPunch();">Yes</button>
                        @*<button type="button" class="btn btn-primary punch-btn" style="font-size:80%" onclick="webPunch();">Yes</button>*@
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    }
    <!--Web Schedule Widget-->
    @if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ShowCurrentWebSchedule"))
    {
        <div class="col-md-4 d-flex pl-0">

            <div class="card flex-fill mb-2">
                <div id="divLoadingCurrentWebSchedule" class="align-content-md-start">
                    <img src="~/Content/Themes/assets/img/ajax-loading.gif" width="18" height="18" />
                </div>

                <div class="card-header" style="padding:15px;">
                    <h3 class="card-title mb-0" id="">
                        Current Web Schedule
                        <span class="float-right pt-2" style="font-size:x-small;" id="spanWebScheduleDateRange">-</span>
                    </h3>
                </div>
                <div class="card-body pb-0">

                    <div>
                        <p><i class="fa fa-dot-circle-o text-success mr-2"></i>Working Day(s) <span class="float-right" id="spanWebSchWorkingDays">-</span></p>

                        <p><i class="fa fa-dot-circle-o text-info mr-2"></i>Total Hour(s) <span class="float-right" id="spanWebSchTotalHours">-</span></p>

                    </div>

                </div>
                <div class="card-footer" style="text-align:center;">
                    @if (TimeAide.Services.ApplicationConfigurationService.IsWidgetAvailable("ViewWebScheduleOnWidget"))
                    {
                        <a href="javascript:viewCurrentWebScheduleDetail(0);">View Web Schedule</a>
                    }
                </div>
            </div>
        </div>
    }
</div>
<div id="divJobCertificationPopup">
</div>
@Html.Partial("_NotificationListPopup")
<script>
    $(document).ready(function () {


        loadMyNotificationWidgetDetail();

        $('#myNotificationPeriodType').on('change', function () {
            loadMyNotificationWidgetDetail();
        });
        getDailyCompensation(@Model.EmployeeId);

        getDashboardPayStubWidgetBatchDD(@id);
        $('#payStubBatchList').on('change', function () {
            debugger;
            var batchId = $(this).val();
            getDashboardPayStubWidgetData(batchId);
        });
        getWebPunchSummary();
    });

    function getDailyCompensation(e_id) {
        //$("#divLoadingDailyCompensation").show();
        debugger;

        $.ajax({
            type: "GET",
            url: '/EmployeeTimeSheet/Today',
            data: { "employeeId": e_id},
            success: function (data) {
                debugger;
                $("#divTodayPunchaData").html(data);
            },
            error: function () {
            }
        });
    }
    function loadMyNotificationWidgetDetail() {
        getDashboardMyNotificationWidgetDetail();
       // getDashboardMyNotificationList(null);
        getDashboardMyScheduleWidgetDetail();
        getSelfServiceWebScheduleWidgetDetail();
        getDashboardMyLicensesWidgetDetail();
    }

    function getDashboardMyNotificationWidgetDetail() {
        $("#divLoadingMyNotificationWidget").show();
        debugger;
        var parmObject = new Object();
        parmObject.UserRecordPeriodTypeId = $('#myNotificationPeriodType').val();
        parmObject.UserId = @id;
        $.ajax({
            type: "POST",
            url: '/UserInformation/GetDashboardMyNotificationRecordWidget',
            data: JSON.stringify(parmObject),

            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                //console.log(data);

                $("#divDashboardMyNotiRecord").html(data);
                $("#divLoadingMyNotificationWidget").hide();

            },
            error: function () {
                // displayWarningMessage(data.ErrorMessage);
            }
        });
    }
    function getDashboardMyNotificationList(statusTypeId) {
      //  $("#divLoadingMyNotificationList").show();
        debugger;
        var parmObject = new Object();
        parmObject.UserRecordPeriodTypeId = $('#myNotificationPeriodType').val();
        parmObject.UserRecordStatusTypeId = statusTypeId;
        parmObject.UserId = @id;

        $("#divDashboardNotificationsList").html("");
        $("#notificationList_modal").modal("show");
        $('#NotificationTypeName').text("My Notification(s) List");
        $("#divLoadingNotificationList").show();
        $.ajax({
            type: "POST",
            url: '/UserInformation/GetDashboardMyNotificationList',
            data: JSON.stringify(parmObject),

            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                //console.log(data);
                //if (statusTypeId != null) {
                //    $('html, body').animate({
                //        scrollTop: ($('#divDashboardMyNotificationList').offset().top)
                //    }, 500);
                //}

                $("#divDashboardNotificationsList").html(data);
                $("#divLoadingNotificationList").hide();
                $('#tblNotification').dataTable({
                    "searching": true,
                    "paging": true,
                    "pageLength": 5,
                    "lengthChange": false
                });
            },
            error: function () {
                // displayWarningMessage(data.ErrorMessage);
            }
        });
    }
    function getDashboardMyScheduleWidgetDetail() {
        debugger;
        if ( $("#IsTimeAideWindowClient").val() == "False") return;
        $("#divLoadingCurrentSchedule").show();

        $.ajax({
            type: "POST",
            url: '/EmployeeAttendanceSchedule/GetDashboardMyCurrentScheduleWidget',
            data: {"id":@id},
            dataType: "json",
            success: function (data) {
                debugger;
                //console.log(data);
                if (data.status == "Success") {
                    $("#spanScheduleDateRange").text(data.widgetData.sNote);
                    $("#spanWorkingDays").text(data.widgetData.nPayWeekNum);
                    $("#spanTotalHours").text(data.widgetData.dblPeriodHours);
                }
                else {
                    showAlertAutoHide("", "Error", data.message);
                }
                $("#divLoadingCurrentSchedule").hide();

            },
            error: function () {
                // displayWarningMessage(data.ErrorMessage);
            }
        });

    }

    function getDashboardMyLicensesWidgetDetail() {
        debugger;
        if ($("#IsTimeAideWindowClient").val() == "False") return;
            $("#divLoadingMyLicensesList").show();

        $.ajax({
            type: "GET",
            url: '/EmployeeLicenses/GetDashboardMyCurrentLicensesWidget',
            data: {"id":@id},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                $("#divDashboardMyLicensesList").html(data);
                $("#divLoadingMyLicensesList").hide();
            },
            error: function () {
                // displayWarningMessage(data.ErrorMessage);
            }
        });
    }
    function getDashboardPayStubWidgetBatchDD(id) {
        debugger;
        if ($("#IsTimeAideWindowClient").val() == "False") return;
        $("#divLoadingPayStubWidget").show();

        $.ajax({
            type: "POST",
            url: '/EmployeePayStub/AjaxPayStubBatchList',
            data: { "id": id},
            dataType: "json",
            success: function (data) {
                debugger;
                $("#divLoadingPayStubWidget").hide();
                //console.log(data);
                if (data.status == "Success") {
                    debugger;
                    var isFirstRecordSel = false;
                    var selectedBatchId = "";
                    console.log(data.widgetData);
                    $('#payStubBatchList option').remove();
                    $(data.widgetData).each(function () {
                        debugger;
                        if (isFirstRecordSel == false) {
                            selectedBatchId = this.BatchId;
                            isFirstRecordSel = true;
                        }
                        var option = '<option value=' + this.BatchId + '>' + this.BatchDescription + '</option>';
                        $('#payStubBatchList').append(option);
                    });

                    if (isFirstRecordSel) {
                        getDashboardPayStubWidgetData(selectedBatchId);
                    }
                }
                else {
                    showAlertAutoHide("", "Error", data.message);
                }
                $("#divLoadingCurrentSchedule").hide();

            },
            error: function () {
                // displayWarningMessage(data.ErrorMessage);
            }
        });

    }
    function getDashboardPayStubWidgetData(batchId) {
        debugger;
        if ($("#IsTimeAideWindowClient").val() == "False") return;
        // $("#divLoadingCurrentSchedule").show();

        $.ajax({
            type: "POST",
            url: '/EmployeePayStub/AjaxDashboardPayStubWidgetData',
            data: { "batchId": batchId,
                    "id":@id
                    },
            dataType: "json",
            success: function (data) {
                debugger;
                //console.log(data);
                if (data.status == "Success") {
                    debugger;
                    console.log(data.widgetData);
                    $("#payStubBatchName").text(data.widgetData.BatchDescription);
                    $("#payStubPayDate").text(data.widgetData.PayDate);
                    //$("#payStubStartDate").text(data.widgetData.PeriodStart);
                    //$("#payStubEndDate").text(data.widgetData.PeriodEnd);
                    $("#payStubPayPeriod").text(data.widgetData.PeriodStart + " - " + data.widgetData.PeriodEnd);
                    $("#payStubEarning").text("$" + data.widgetData.Earnings);
                    $("#payStubDeduction").text("$" + data.widgetData.Deducations);
                    $("#payStubNetPay").text("$" + data.widgetData.NetPayAmount);
                }
                else {
                    showAlertAutoHide("", "Error", data.message);
                }
                $("#divLoadingCurrentSchedule").hide();

            },
            error: function () {
                // displayWarningMessage(data.ErrorMessage);
            }
        });

     }
    function getSelfServiceWebScheduleWidgetDetail() {
        debugger;
        $("#divLoadingCurrentWebSchedule").show();

        $.ajax({
            type: "POST",
            url: '/EmployeeWebAttendanceSchedule/GetSelfServiceCurrentWebScheduleWidget',
            dataType: "json",
            success: function (data) {
                debugger;
                //console.log(data);
                if (data.status == "Success") {
                    $("#spanWebScheduleDateRange").text(data.widgetData.sNote);
                    $("#spanWebSchWorkingDays").text(data.widgetData.nPayWeekNum);
                    $("#spanWebSchTotalHours").text(data.widgetData.dblPeriodHours);
                }
                else {
                    showAlertAutoHide("", "Error", data.message);
                }
                $("#divLoadingCurrentWebSchedule").hide();

            },
            error: function () {
                // displayWarningMessage(data.ErrorMessage);
            }
        });

    }
    function viewCurrentScheduleDetail(useId) {
        window.location.href = "/EmployeeAttendanceSchedule/SelfServiceSchedule/" + useId;
    }

    function viewTimeSheetDetail(useId) {
       // window.location.href = "/Payslip/EmployeePayslipView?userInformationId=" + useId;
        window.location.href = "/EmployeeTimesheet/SelfServiceTimesheet/"+ useId;
    }
    function viewTimeOffDetail(useId) {
        debugger;
        window.location.href = "/EmployeeTimeOffRequest/IndexSelfService/" + useId;
       
    }
    function viewCurrentWebScheduleDetail(useId) {
        window.location.href = "/EmployeeWebAttendanceSchedule/SelfServiceWebSchedule";
    }
    function viewPayStubDetail() {
        debugger;
        var batchId = $("#payStubBatchList").val();
        if (batchId == "" || batchId == null) {
            showAlertAutoHide("", "Error", "Please select the Pay Stub period.");
            return;
        }
        window.location.href = "/EmployeePayStub/Index?batchId=" + batchId+"&id=@id";
    }
    function generateJobCertificate(id, optenType) {
        debugger
        $.ajax({
            type: "get",
            url: '/Reports/SelfServicejobCertification',
            data: {"id":id},
            success: function (data) {
                //debugger;
                //console.log(data);
                $("#divJobCertificationPopup").html(data);
                $("#JobCertificatePopup_modal").modal("show");
                //$("#divLoadingReportingHierarchyTab").hide();
            },
            error: function () {
                showAlertAutoHide("", "Error", data.ErrorMessage);
            }
        });
    }
    const options = {
        enableHighAccuracy: true,
        timeout: 5000,
        maximumAge: 0
    };

    function success(pos) {
        const crd = pos.coords;

        //console.log('Your current position is:');
        //console.log(`Latitude : ${crd.latitude}`);
        //console.log(`Longitude: ${crd.longitude}`);
        //console.log(`More or less ${crd.accuracy} meters.`);

        debugger;
        var longitude = crd.longitude;
        var latitude = crd.latitude;
        $.ajax({
            type: "POST",
            url: '/WebPunchConfiguration/WebPunch',
            data: { "longitude": longitude, "latitude": latitude },
            dataType: "json",
            success: function (data) {
                $('#confirmPunch_modal1').modal('hide');
                $("#divLoadingWebPunchConfirmation").hide();
                debugger;
                if (data.status == "Success") {
                    toastr.success("Successly punched", "Successly punched!");
                }
                else {
                    toastr.error(data.message, "Error!");
                }
            },
            error: function () {
                $('#confirmPunch_modal1').modal('hide');
                $("#divLoadingWebPunchConfirmation").hide();
                toastr.error("Error!", "Error!");
            }
        });
    }

    function error(err) {

    }
    function confirmPunch() {
	    var date = new Date();
	    var current_date = date.getFullYear()+"-"+(date.getMonth()+1)+"-"+ date.getDate();
	    var current_time = date.getHours()+":"+date.getMinutes()+":"+ date.getSeconds();
	    var date_time = current_date+" "+current_time;
        $('#divconfirmPunch').val("Are you sure to punch clock at " + date_time);
        $("#divLoadingWebPunchConfirmation").hide();
        $('#confirmPunch_modal1').modal('show');
    }
    function webPunch() {
        $("#divLoadingWebPunchConfirmation").show();
        navigator.geolocation.getCurrentPosition(success, error, options);

        //navigator.geolocation.getCurrentPosition(function (location) {
          //  $('#hdnLongitude').val(location.coords.longitude);
          //  $('#hdnLatitude').val(location.coords.latitude);
           //alert(location.coords.accuracy);
           //alert(location.coords.longitude);
        //});
        //await $(window).delay(5000).promise(); // 5 seconds
        //debugger;
        //var longitude = $('#hdnLongitude').val();
        //var latitude = $('#hdnLatitude').val();
        //$.ajax({
        //    type: "POST",
        //    url: '/WebPunchConfiguration/WebPunch',
        //    data: { "longitude": longitude, "latitude": latitude },
        //    dataType: "json",
        //    success: function (data) {
        //        debugger;
        //        if (data.status == "Success") {
        //            toastr.success("Successly punched", "Successly punched!");
        //        }
        //        else {
        //            toastr.error(data.message, "Error!");
        //        }
        //    },
        //    error: function () {
        //        toastr.error("Error!", "Error!");
        //    }
        //});

    }
    function getWebPunchSummary() {


        /*$("#exampleModal").show();*/
        $("#divLoadingWebPunchSummary").show();
        debugger;
        var parmObject = { "id": @id };
        $.ajax({
            type: "POST",
            url: '/WebPunchConfiguration/GetWebPunchSummary',
            //data: { "id": "@id" },
            data:JSON.stringify(parmObject),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                $("#divWebPunchSummary").html(data);
                $("#divLoadingWebPunchSummary").hide();

            },
            error: function () {
            }
        });
    }
</script>
