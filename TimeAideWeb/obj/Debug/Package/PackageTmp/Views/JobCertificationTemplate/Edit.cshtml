@using TimeAide.Data;
@model TimeAide.Web.Models.JobCertificationTemplate

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.Id)
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="padding:10px">
        @Html.Partial("_CreatePageTitleView")
        <div class="form-group row">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-2">
                @Html.LabelFor(model => model.TemplateTypeId, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-8">
                @{
                    var templateType = DataHelper.TemplateType.
                                    Select(w => new SelectListItem() { Text = w.Value, Value = w.Key.ToString() }).ToList();

                }

                @Html.DropDownList("TemplateTypeId", templateType, "Please select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TemplateTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-2 pr-0">
                @* @Html.LabelFor(model => model.Message, "Message", htmlAttributes: new { @class = "control-label" })*@
                <label class="col-form-label">Tags List <span class="text-danger"></span></label>
                @Html.Partial("_TagListView")

            </div>
            <div class="col-md-10 pr-2">
                <label class="col-form-label">Template Body <span class="text-danger"></span></label>
                @*@Html.TextAreaFor(model => model.Message, 10, 50, new { style = "width:100% !important;background: none;margin-top: 0;border: none;resize: none;resize:none;", @class = "form-control richtext-editor" })*@
                @Html.TextAreaFor(m => m.TemplateBody, new { rows = "20", style = "resize:none;width:600px;", @class = "form-control richtext-editor" })
                @Html.ValidationMessageFor(model => model.TemplateBody, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.Partial("_CreatePageFooterView")
    </div>
}

<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">
<script src="~/Scripts/jquery-ui.js"></script>
@*<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
    <script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>*@
<link href="~/Content/Themes/assets/plugins/summernote/dist/summernote.css" rel="stylesheet" />
<script src="~/Content/Themes/assets/plugins/summernote/dist/summernote.js"></script>
<script src="~/Content/Themes/assets/plugins/summernote/dist/summernote-ext-print.js"></script>
<script>
    $(document).ready(function () {
        var width = $(window).width();
        var modal = $(".modal-content");
        if (width >= 1024) {
            modal.css('width', '1100px');
        }
        else {
            modal.css('width', width + 'px');
        }
        $('.richtext-editor').summernote({
            toolbar: [
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['fontsize', ['fontsize']],
                ['fontname', ['fontname']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['table', ['']],
                ['insert', ['link', 'picture']],
                ['misc', ['print']],
            ],
            height: 700, // set editor height
            minHeight: null, // set minimum height of editor
            maxHeight: null, // set maximum height of editor
            focus: false, // set focus to editable area after initializing summernote
            disableDragAndDrop: true

        });
        $('div.note-popover').css("display", "none");
        setTimeout(function () {
            debugger;
            $('.richtext-editor').summernote('fontName', 'Arial');
            $('.richtext-editor').summernote('fontSizeUnit', 'pt');
            $('.richtext-editor').summernote('fontSize', 14);
            //$('.richtext-editor').summernote('justifyLeft');

        }, 500);


    });
    $(".list-group li a").click(function () {
        $('.richtext-editor').summernote('editor.insertText', $(this).text());
    });
</script>




