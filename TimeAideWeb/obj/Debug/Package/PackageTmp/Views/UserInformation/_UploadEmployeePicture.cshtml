
<div id="upload_picture_modal" class="modal custom-modal">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content">
            @*<div class="modal-header">
            <h5 class="modal-title">Profile Picture</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
        </div>*@
            
                    <div class="mt-2 p-1">
                        <div class="alert alert-primary" style="text-align:center;background-color: #00c5fb;border: 1px solid #00c5fb;">
                            <h4 style="display: inline;">Add- Profile Picture</h4>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                        </div>
                        <hr>
                    </div>
                    <div class="modal-body pt-0">
                        <div class="container" role="main">
                            <form id="uploadUserPictureForm" onsubmit="return false;"  enctype="multipart/form-data" class="needs-validation profilePicturebox" novalidate>
                                @*<div class="card">
        <div class="card-body pb-0">*@

                                <div class="alert" style="display:none;" id="uploadPicAlert">
                                    <a href="javascript:void(0)" class="close" id="alertDismiss">&times;</a>
                                    <strong>Alert!</strong><span class="ml-1"></span>
                                </div>

                                <div>
                                    <img id="userProfileImageEdit" class="inline-block mx-auto d-block" src="~/Images/user-profile-pic.jpg" style="border-radius:50%;height:120px;width:120px;">

                                </div>
                                <div class="row">
                                    <div class="col-md-12 p-0">

                                        <div class="form-group">
                                            <div class="box__input" style="margin-top: 20px;">
                                                @*<svg class="box__icon" xmlns="http://www.w3.org/2000/svg" width="50" height="43" viewBox="0 0 50 43"><path d="M48.4 26.5c-.9 0-1.7.7-1.7 1.7v11.6h-43.3v-11.6c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v13.2c0 .9.7 1.7 1.7 1.7h46.7c.9 0 1.7-.7 1.7-1.7v-13.2c0-1-.7-1.7-1.7-1.7zm-24.5 6.1c.3.3.8.5 1.2.5.4 0 .9-.2 1.2-.5l10-11.6c.7-.7.7-1.7 0-2.4s-1.7-.7-2.4 0l-7.1 8.3v-25.3c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v25.3l-7.1-8.3c-.7-.7-1.7-.7-2.4 0s-.7 1.7 0 2.4l10 11.6z" /></svg>*@
                                                <input type="file" name="files[]" id="userPictureUpload" class="box__file" data-multiple-caption="{count} files selected" multiple accept=".jpg"/>
                                                <label for="userPictureUpload" id="lbldocumentfile"><strong>Choose a file</strong><span class="box__dragndrop"> or drag it here</span>.</label>
                                                <a class="btn" id="btnClearFileSelection" href="#" style="margin-bottom: 2rem;display: none;" onclick="clearFileSelection()"><i class="fa fa-minus-square"></i></a>
                                            </div>
                                            <div class="submit-section">
                                                <button type="submit" id="btnUploadPic1" class="box__button">Upload</button>
                                                @*<button type="button" class="box__button" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>*@
                                                <button id="btnDeletePicture" class="btn btn-secondary submit-btn mt-1" value="del">Delete</button>
                                            </div>
                                            @*<input class="form-control" type="file" id="userPictureUpload" accept=".jpg">*@
                                            <div class="row">
                                                @*<div class="box__uploading"><img src="~/Images/spinning-loading.gif" /></div>*@
                                                <div class="box__success">Done! <a href="https://css-tricks.com/examples/DragAndDropFileUploading//?" class="box__restart" role="button">Upload more?</a></div>
                                                <div class="box__error">Error! <span></span>. <a href="https://css-tricks.com/examples/DragAndDropFileUploading//?" class="box__restart" role="button">Try again!</a></div>
                                            </div>
                                            @*<button class="btn btn-primary submit-btn mt-2 ml-4" id="btnUploadPic">Upload</button>
                                            <button id="btnDeletePicture" class="btn btn-secondary submit-btn mt-2 ml-4">Delete</button>*@
                                        </div>
                                    </div>

                                </div>

                                @*<div class="submit-section mt-1">
            <button id="btnUploadPicture" class="btn btn-primary submit-btn">Upload</button>
            <button id="btnDeletePicture" class="btn btn-secondary submit-btn">Delete</button>
        </div>*@
                            </form>
                        </div>
                        
                    </div>
        </div>
            
    </div>
</div>
@*</div>
    </div>*@
<style>

    .container {
        width: 100%;
        max-width: 680px; /* 800 */
        text-align: center;
        margin: 0 auto;
    }

    .container h1 {
        font-size: 42px;
        font-weight: 300;
        color: #0f3c4b;
        margin-bottom: 40px;
    }

    .container h1 a:hover,
    .container h1 a:focus {
        color: #39bfd3;
    }

    .container nav {
        margin-bottom: 40px;
    }

    .container nav a {
        border-bottom: 2px solid #c8dadf;
        display: inline-block;
        padding: 4px 8px;
        margin: 0 5px;
    }

    .container nav a.is-selected {
        font-weight: 700;
        color: #39bfd3;
        border-bottom-color: currentColor;
    }

    .container nav a:not( .is-selected ):hover,
    .container nav a:not( .is-selected ):focus {
        border-bottom-color: #0f3c4b;
    }

    .container footer {
        color: #92b0b3;
        margin-top: 40px;
    }

    .container footer p + p {
        margin-top: 1em;
    }

    .container footer a:hover,
    .container footer a:focus {
        color: #39bfd3;
    }

    .profilePicturebox {
        /*font-size: 1.25rem;*/ /* 20 */
        background-color: #fff;
        position: relative;
        /*padding: 100px 20px;*/
    }

    .profilePicturebox.has-advanced-upload {
        /* outline: 2px dashed #92b0b3;
        outline-offset: -10px;*/
        -webkit-transition: outline-offset .15s ease-in-out, background-color .15s linear;
        transition: outline-offset .15s ease-in-out, background-color .15s linear;
    }

    .profilePicturebox.is-dragover {
        outline-offset: -20px;
        outline-color: #c8dadf;
        background-color: #c8dadf;
    }

    .box__dragndrop,
    .box__icon {
        display: none;
    }

    .profilePicturebox.has-advanced-upload .box__dragndrop {
        display: inline;
    }

    .profilePicturebox.has-advanced-upload .box__icon {
        width: 100%;
        height: 80px;
        fill: #92b0b3;
        display: block;
        margin-bottom: 40px;
    }

    .profilePicturebox.is-uploading .box__input,
    .profilePicturebox.is-success .box__input,
    .profilePicturebox.is-error .box__input {
        visibility: hidden;
    }

    .box__uploading,
    .box__success,
    .box__error {
        display: none;
    }

    .profilePicturebox.is-uploading .box__uploading,
    .profilePicturebox.is-success .box__success,
    .profilePicturebox.is-error .box__error {
        display: block;
        position: absolute;
        top: 50%;
        right: 0;
        left: 0;
        -webkit-transform: translateY( -50% );
        transform: translateY( -50% );
    }

    .box__uploading {
        font-style: italic;
    }

    .box__success {
        -webkit-animation: appear-from-inside .25s ease-in-out;
        animation: appear-from-inside .25s ease-in-out;
    }

    @@-webkit-keyframes appear-from-inside {
        from {
            -webkit-transform: translateY( -50% ) scale( 0 );
        }

        75% {
            -webkit-transform: translateY( -50% ) scale( 1.1 );
        }

        to {
            -webkit-transform: translateY( -50% ) scale( 1 );
        }
    }

    @@keyframes appear-from-inside {
        from {
            transform: translateY( -50% ) scale( 0 );
        }

        75% {
            transform: translateY( -50% ) scale( 1.1 );
        }

        to {
            transform: translateY( -50% ) scale( 1 );
        }
    }

    .box__restart {
        font-weight: 700;
    }

    .box__restart:focus,
    .box__restart:hover {
        color: #39bfd3;
    }

    .js .box__file {
        width: 0.1px;
        height: 0.1px;
        opacity: 0;
        overflow: hidden;
        position: absolute;
        z-index: -1;
    }

    .js .box__file + label {
        max-width: 80%;
        text-overflow: ellipsis;
        white-space: nowrap;
        cursor: pointer;
        display: inline-block;
        overflow: hidden;
    }

    .js .box__file + label:hover strong,
    .box__file:focus + label strong,
    .box__file.has-focus + label strong {
        color: #39bfd3;
    }

    .js .box__file:focus + label,
    .js .box__file.has-focus + label {
        outline: 1px dotted #000;
        outline: -webkit-focus-ring-color auto 5px;
    }

    .js .box__file + label * {
        /* pointer-events: none; */ /* in case of FastClick lib use */
    }

    .no-js .box__file + label {
        display: none;
    }

    .no-js .box__button {
        display: block;
    }

    .box__button {
        /*font-weight: 700;
        color: #e5edf1;
        background-color: #39bfd3;*/
        /*display: block;
        padding: 8px 16px;*/
        /*margin: 40px auto 0;*/
        border-radius: 50px;
        font-size: 18px;
        font-weight: 600;
        min-width: 200px;
        padding: 10px 20px;
        background-color: #00c5fb;
        border: 1px solid #00c5fb;
        color: #fff;
    }

    .box__button:hover:enabled,
    .box__button:focus:enabled {
        background-color: #0f3c4b;
    }

</style>
<script>(function (e, t, n) { var r = e.querySelectorAll("html")[0]; r.className = r.className.replace(/(^|\s)no-js(\s|$)/, "$1js$2") })(document, window, 0);</script>
<style>
    .invalid input:required:invalid {
        background: #BE4C54;
    }

    /* Mark valid inputs during .invalid state */
    .invalid input:required:valid {
        background: #17D654;
    }
</style>

<script>

    'use strict';
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
    ; (function (document, window, index) {
        // feature detection for drag&drop upload
        var isAdvancedUpload = function () {
            var div = document.createElement('div');
            return (('draggable' in div) || ('ondragstart' in div && 'ondrop' in div)) && 'FormData' in window && 'FileReader' in window;
        }();


        // applying the effect for every form
        var forms = document.querySelectorAll('.profilePicturebox');

        Array.prototype.forEach.call(forms, function (form) {
            var input = form.querySelector('input[type="file"]'),
                label = form.querySelector('#lbldocumentfile'),
                errorMsg = form.querySelector('.box__error span'),
                restart = form.querySelectorAll('.box__restart'),
                droppedFiles = false,
                showFiles = function (files) {
                    const allowedTypes = ['image/jpeg'];
                    let isValidType = true;
                    Array.prototype.forEach.call(droppedFiles, function (eachFile) {
                        var mimeType = eachFile.type;
                        if (jQuery.inArray(mimeType, allowedTypes) == -1) {
                            toastr.error("Invalid file type: " + mimeType + ", Please select another file.", "Error!");
                            isValidType=false;
                        }
                    });
                    if (isValidType) {
                        showSelectedImage1(files);
                        label.textContent = files.length > 1 ? (input.getAttribute('data-multiple-caption') || '').replace('{count}', files.length) : files[0].name;
                        $('#btnClearFileSelection').show();
                    }
                    /*$('#btnUploadDocument').prop('disabled', false);*/
                },
                triggerFormSubmit = function () {
                    debugger
                    alert('hi1');
                    return false;
                    //var event = document.createEvent('HTMLEvents');
                    //event.initEvent('submit', true, false);
                    //form.dispatchEvent(event);
                    //uploadProfilePicture1("U");

                };

            // letting the server side to know we are going to make an Ajax request
            var ajaxFlag = document.createElement('input');
            ajaxFlag.setAttribute('type', 'hidden');
            ajaxFlag.setAttribute('name', 'ajax');
            ajaxFlag.setAttribute('value', 1);
            form.appendChild(ajaxFlag);
            var delBtn = document.getElementById('btnDeletePicture');
            // automatically submit the form on file select
            input.addEventListener('change', function (e) {
                showFiles(e.target.files);
                showSelectedImage(e.target);

            });

            delBtn.addEventListener('click', function (e) {
                e.preventDefault();
                e.stopPropagation();

            });
            // drag&drop files if the feature is available
            if (isAdvancedUpload) {
                form.classList.add('has-advanced-upload'); // letting the CSS part to know drag&drop is supported by the browser

                ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'].forEach(function (event) {
                    form.addEventListener(event, function (e) {
                        // preventing the unwanted behaviours
                        e.preventDefault();
                        e.stopPropagation();
                    });
                });
                ['dragover', 'dragenter'].forEach(function (event) {
                    form.addEventListener(event, function () {
                        form.classList.add('is-dragover');
                    });
                });
                ['dragleave', 'dragend', 'drop'].forEach(function (event) {
                    form.addEventListener(event, function () {
                        form.classList.remove('is-dragover');
                    });
                });
                form.addEventListener('drop', function (e) {
                    droppedFiles = e.dataTransfer.files; // the files that were dropped
                    showFiles(droppedFiles);

                });
            }


            // if the form was submitted
            form.addEventListener('submit', function (e) {
                // preventing the duplicate submissions if the current one is in progress
                debugger
                if (form.checkValidity() === false) {
                    e.preventDefault();
                    e.stopPropagation();
                    alert('hi11121');
                    e.preventDefault();
                    return false;
                }
                console.log("Foam submit");
                console.log(e);
                console.log(this.value);
                if (form.classList.contains('is-uploading')) return false;

                form.classList.add('is-uploading');
                form.classList.remove('is-error');

                if (isAdvancedUpload) // ajax file upload for modern browsers
                {
                    e.preventDefault();

                    // gathering the form data
                    var ajaxData = new FormData(form);
                    if (droppedFiles) {
                        Array.prototype.forEach.call(droppedFiles, function (file) {
                            ajaxData.append(input.getAttribute('name'), file);
                        });
                    }

                    uploadProfilePicture1("U",droppedFiles);
                    // ajax request
                    //var ajax = new XMLHttpRequest();
                    //ajax.open(form.getAttribute('method'), form.getAttribute('action'), true);

                    //ajax.onload = function () {
                    //    form.classList.remove('is-uploading');
                    //    if (ajax.status >= 200 && ajax.status < 400) {
                    //        var data = JSON.parse(ajax.responseText);
                    //        form.classList.add(data.success == true ? 'is-success' : 'is-error');
                    //        if (!data.success) errorMsg.textContent = data.error;
                    //    }
                    //    else alert('Error. Please, contact the webmaster!');
                    //};

                    //ajax.onerror = function () {
                    //    form.classList.remove('is-uploading');
                    //    alert('Error. Please, try again!');
                    //};

                    //ajax.send(ajaxData);
                }
                else // fallback Ajax solution upload for older browsers
                {
                    var iframeName = 'uploadiframe' + new Date().getTime(),
                        iframe = document.createElement('iframe');

                    $iframe = $('<iframe name="' + iframeName + '" style="display: none;"></iframe>');

                    iframe.setAttribute('name', iframeName);
                    iframe.style.display = 'none';

                    document.body.appendChild(iframe);
                    form.setAttribute('target', iframeName);

                    iframe.addEventListener('load', function () {
                        var data = JSON.parse(iframe.contentDocument.body.innerHTML);
                        form.classList.remove('is-uploading')
                        form.classList.add(data.success == true ? 'is-success' : 'is-error')
                        form.removeAttribute('target');
                        if (!data.success) errorMsg.textContent = data.error;
                        iframe.parentNode.removeChild(iframe);
                    });
                }
            });


            // restart the form if has a state of error/success
            Array.prototype.forEach.call(restart, function (entry) {
                entry.addEventListener('click', function (e) {
                    e.preventDefault();
                    form.classList.remove('is-error', 'is-success');
                    input.click();
                });
            });

            // Firefox focus bug fix for file input
            input.addEventListener('focus', function () { input.classList.add('has-focus'); });
            input.addEventListener('blur', function () { input.classList.remove('has-focus'); });

        });
    }(document, window, 0));

    function clearFileSelection() {
        debugger
        $('#lbldocumentfile').html('<strong>Choose a file</strong><span class="box__dragndrop"> or drag it here</span>.');
        document.getElementById("userPictureUpload").value = null;
        /*$('#btnUploadCredential').prop('disabled', true);*/
        $('#btnClearFileSelection').hide();
        /*$("#lbldocumentfile").text('');*/
        showSelectedImage1(null);
        $('.box__input').css('visibility', 'visible');
    }

    function showSelectedImage1(files) {
        debugger;
        if (files && files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#userProfileImageEdit').attr('src', e.target.result);
            }

            reader.readAsDataURL(files[0]);
        }
        else {
            $('#userProfileImageEdit').attr('src', '');
        }
    }
    $("#btnUploadPic1").click(function () {
        //uploadProfilePicture1("U")
        //btnDeletePicture
    });
    function uploadProfilePicture1(action, droppedFiles) {

        debugger;
        var isProceed = true;
        var formData = new FormData();
        var id = $('#userID').val();
        var pictureSrc = $('#profileMainPicture').attr("src");

        formData.append("UserID", id);
        formData.append("Action", action);


        if (action == 'U') {
            var totalFiles = document.getElementById("userPictureUpload").files.length;
            if (totalFiles > 0) {
                var file = document.getElementById("userPictureUpload").files[0];
                formData.append("FileUpload", file);
            }
            else if (droppedFiles) {
                Array.prototype.forEach.call(droppedFiles, function (eachFile) {
                    formData.append("FileUpload", eachFile);
                });
            }
            //if (totalFiles > 0) {
            //    var file = document.getElementById("file").files[0];
            //    formData.append("FileUpload", file);

            //}
            //else {
            //    isProceed = false;
            //    showAlertAutoHide("#uploadPicAlert", "Error", "Please choose the profile picture");
            //}
        }
        else if (action == "D") {
            if (pictureSrc.indexOf("no-profile-image.jpg") > 0) {
                isProceed = false;
                showAlertAutoHide("#uploadPicAlert", "Error", "No picture is available to delete");
            }
        }
        if (isProceed) {
            //Ajax call for uploading & deletion
            $.ajax({
                type: "POST",
                url: '/UserInformation/AjaxUploadUserPicture',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (data) {
                    debugger;
                    if (data.status == "Success") {
                        clearFileSelection();
                        $("#uploadUserPictureForm").removeClass("is-uploading");
                        $('#profileMainPicture').attr('src', data.picturePath + "?timestamp=" + new Date().getTime());
                        $('#upload_picture_modal').modal('hide');
                        showAlertAutoHide("#", data.status, data.message);
                    }
                    else {
                        showAlertAutoHide("#", data.status, data.message);
                        $("#uploadUserPictureForm").removeClass("is-uploading");
                    }


                },
                error: function (error) {

                    showAlertAutoHide("#", "Error", error);

                }
            });
        }

        
    }
</script>