@using TimeAide.Web.ViewModel;
@using TimeAide.Web.Models;

<div class="row" id="divError">
    @*<div class="danger">Below Users have issues while sending registration email</div>*@
    <div class="table-responsive">
        <table class="table table-striped custom-table table-nowrap mb-0" id="tblErrorUser">
            <!--<table class="datatable table table-striped table-nowrap mb-0">-->
            <thead>
                <tr>
                    <th>Emp Id</th>
                    <th>Name</th>
                    <th>Department</th>
                    <th>EmployeeType</th>
                    <th>Position</th>
                    <td>Login Email</td>
                    <th>Role</th>
                    <th>
                        Employee Groups
                    </th>
                </tr>
            </thead>
            <tbody id="tbodyTblErrorUser">
                @if (Model != null)
                {
                    <tr>
                        <td>
                        </td>
                        <td>
                            --- Not Sent ---
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                    </tr>
                    foreach (var each in (ViewBag.NotSent as List<TimeAide.Models.ViewModel.UserInformationViewModel>))
                    {
                        @AddRow(each)
                    }
                    <tr>
                        <td>
                        </td>
                        <td>
                            --- Sent ---
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                    </tr>
                    foreach (var each in (ViewBag.Sent as List<TimeAide.Models.ViewModel.UserInformationViewModel>))
                    {
                        @AddRow(each)
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<div class="submit-section">
    @Html.ActionLink("Back Bulk Registration", "IndexBulkUserRegistration", "UserInformation")
</div>
@helper AddRow(TimeAide.Models.ViewModel.UserInformationViewModel each)
{
    var activeEmployment = TimeAide.Services.EmploymentService.GetActiveEmployment(each.Id);
    EmploymentHistory activeEmploymentHistory = null;
    if (activeEmployment != null)
    {
        activeEmploymentHistory = TimeAide.Services.EmploymentHistoryService.GetActiveEmploymentHistory(each.Id, activeEmployment.Id);
    }
    <tr>
        <td>
            @Html.DisplayFor(modelItem => each.EmployeeId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => each.ShortFullName)
        </td>
        <td>
            @if (activeEmploymentHistory != null && activeEmploymentHistory.Department != null)
            {
                <span>@activeEmploymentHistory.Department.DepartmentName</span>
            }
        </td>
        <td>
            @if (activeEmploymentHistory != null && activeEmploymentHistory.EmployeeType != null)
            {
                <span>@activeEmploymentHistory.EmployeeType.EmployeeTypeName</span>
            }
        </td>
        <td>
            @if (activeEmploymentHistory != null && activeEmploymentHistory.Position != null)
            {
                <span>@activeEmploymentHistory.Position.PositionName</span>
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => each.LoginEmail)
        </td>
        <td>@Html.DisplayFor(modelItem => each.UserRole)</td>
        <td>@Html.DisplayFor(modelItem => each.EmployeeGroups)</td>
    </tr>
}
<script>
    $(document).ready(function () {
        var indexColumns = $("#tblErrorUser > thead > tr:first > th").length;
        var exportColumns = "[";
        for (let i = 0; i < indexColumns - 1; i++) {
            exportColumns += i + ","
        }
        if (indexColumns > 0) {
            exportColumns = exportColumns.slice(0, -1)
        }
        exportColumns += "]";
        $('#tblErrorUser').DataTable({
            searching: false,
            ordering: false,
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'copyHtml5',
                    text: '<i class="fa fa-files-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'Copy',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    }
                },
                {
                    extend: 'excelHtml5',
                    text: '<i class="fa fa-file-excel-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'Excel',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    }
                },
                {
                    extend: 'csvHtml5',
                    text: '<i class="fa fa-file-text-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'CSV',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    }
                },
                {
                    extend: 'pdfHtml5',
                    text: '<i class="fa fa-file-pdf-o"></i>',
                    className: 'btn-primary',
                    titleAttr: 'PDF',
                    exportOptions: {
                        columns: jQuery.parseJSON(exportColumns)
                    }
                },
                {
                    extend: 'pageLength',
                    className: 'btn-primary',
                },
            ],
        });
    });
    function BackToBulkEmails() {
        $("#divMainArea").show();
        $("#divReportArea").hide();
    }
</script>

