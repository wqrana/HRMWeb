//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeAide.AdminPanel.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TA7_ImportData_Context : DbContext
    {
        public TA7_ImportData_Context()
            : base("name=TA7_ImportData_Context")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblBatch> tblBatches { get; set; }
        public virtual DbSet<tblPayrollImportFileTemplate> tblPayrollImportFileTemplates { get; set; }
        public virtual DbSet<tblPayrollImportFileTemplateDetail> tblPayrollImportFileTemplateDetails { get; set; }
        public virtual DbSet<tblCompanyBatchWithholding> tblCompanyBatchWithholdings { get; set; }
        public virtual DbSet<tblCompanyBatchWithholdings_ManualEntry> tblCompanyBatchWithholdings_ManualEntry { get; set; }
        public virtual DbSet<tblCompanySchedulesProcessed> tblCompanySchedulesProcesseds { get; set; }
        public virtual DbSet<tblUserBatchWithholding> tblUserBatchWithholdings { get; set; }
        public virtual DbSet<tblUserBatchWithholdings_ManualEntry> tblUserBatchWithholdings_ManualEntry { get; set; }
        public virtual DbSet<tblUserBatchCompensation> tblUserBatchCompensations { get; set; }
        public virtual DbSet<tblUserBatchCompensations_ManualEntry> tblUserBatchCompensations_ManualEntry { get; set; }
        public virtual DbSet<viewPay_UserRecord> viewPay_UserRecord { get; set; }
        public virtual DbSet<tblUserBatch> tblUserBatches { get; set; }
        public virtual DbSet<tblCompensationItem> tblCompensationItems { get; set; }
        public virtual DbSet<tblWithholdingsItem> tblWithholdingsItems { get; set; }
    
        public virtual ObjectResult<spPay_Create_CompanyBatch_Result> spPay_Create_CompanyBatch(ObjectParameter bATCHID, string cOMPANYNAME, string pAYROLLDESCRIPTION, Nullable<System.DateTime> pAYDATE, Nullable<int> sUPERVISORID, string sUPERVISORNAME, Nullable<int> bATCH_TYPE, Nullable<int> tEMPLATEID)
        {
            var cOMPANYNAMEParameter = cOMPANYNAME != null ?
                new ObjectParameter("COMPANYNAME", cOMPANYNAME) :
                new ObjectParameter("COMPANYNAME", typeof(string));
    
            var pAYROLLDESCRIPTIONParameter = pAYROLLDESCRIPTION != null ?
                new ObjectParameter("PAYROLLDESCRIPTION", pAYROLLDESCRIPTION) :
                new ObjectParameter("PAYROLLDESCRIPTION", typeof(string));
    
            var pAYDATEParameter = pAYDATE.HasValue ?
                new ObjectParameter("PAYDATE", pAYDATE) :
                new ObjectParameter("PAYDATE", typeof(System.DateTime));
    
            var sUPERVISORIDParameter = sUPERVISORID.HasValue ?
                new ObjectParameter("SUPERVISORID", sUPERVISORID) :
                new ObjectParameter("SUPERVISORID", typeof(int));
    
            var sUPERVISORNAMEParameter = sUPERVISORNAME != null ?
                new ObjectParameter("SUPERVISORNAME", sUPERVISORNAME) :
                new ObjectParameter("SUPERVISORNAME", typeof(string));
    
            var bATCH_TYPEParameter = bATCH_TYPE.HasValue ?
                new ObjectParameter("BATCH_TYPE", bATCH_TYPE) :
                new ObjectParameter("BATCH_TYPE", typeof(int));
    
            var tEMPLATEIDParameter = tEMPLATEID.HasValue ?
                new ObjectParameter("TEMPLATEID", tEMPLATEID) :
                new ObjectParameter("TEMPLATEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPay_Create_CompanyBatch_Result>("spPay_Create_CompanyBatch", bATCHID, cOMPANYNAMEParameter, pAYROLLDESCRIPTIONParameter, pAYDATEParameter, sUPERVISORIDParameter, sUPERVISORNAMEParameter, bATCH_TYPEParameter, tEMPLATEIDParameter);
        }
    
        public virtual ObjectResult<spPay_Compute_UserBatch_Result> spPay_Compute_UserBatch(string bATCHID, Nullable<int> uSERID, Nullable<int> sUPERVISORID, string sUPERVISORNAME)
        {
            var bATCHIDParameter = bATCHID != null ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(string));
    
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var sUPERVISORIDParameter = sUPERVISORID.HasValue ?
                new ObjectParameter("SUPERVISORID", sUPERVISORID) :
                new ObjectParameter("SUPERVISORID", typeof(int));
    
            var sUPERVISORNAMEParameter = sUPERVISORNAME != null ?
                new ObjectParameter("SUPERVISORNAME", sUPERVISORNAME) :
                new ObjectParameter("SUPERVISORNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPay_Compute_UserBatch_Result>("spPay_Compute_UserBatch", bATCHIDParameter, uSERIDParameter, sUPERVISORIDParameter, sUPERVISORNAMEParameter);
        }
    }
}
